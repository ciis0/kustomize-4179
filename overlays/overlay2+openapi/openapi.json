{
  "definitions": {
    "com.github.openshift.api.apps.v1.CustomDeploymentStrategyParams": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "image": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentCause": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "imageTrigger": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentCauseImageTrigger"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentCauseImageTrigger": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentConfig": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentConfigSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentConfigStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.openshift.io",
          "kind": "DeploymentConfig",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.apps.v1.DeploymentConfigList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentConfig"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeploymentConfigList",
          "version": "v1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "DeploymentConfigList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.apps.v1.DeploymentConfigRollback": {
      "type": "object",
      "required": [
        "name",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentConfigRollbackSpec"
        },
        "updatedAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeploymentConfigRollback",
          "version": "v1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "DeploymentConfigRollback",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.apps.v1.DeploymentConfigRollbackSpec": {
      "type": "object",
      "required": [
        "from",
        "includeTriggers",
        "includeTemplate",
        "includeReplicationMeta",
        "includeStrategy"
      ],
      "properties": {
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "includeReplicationMeta": {
          "type": "boolean"
        },
        "includeStrategy": {
          "type": "boolean"
        },
        "includeTemplate": {
          "type": "boolean"
        },
        "includeTriggers": {
          "type": "boolean"
        },
        "revision": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentConfigSpec": {
      "type": "object",
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "paused": {
          "type": "boolean"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "strategy": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentStrategy"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        },
        "test": {
          "type": "boolean"
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentTriggerPolicy"
          }
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentConfigStatus": {
      "type": "object",
      "required": [
        "latestVersion",
        "observedGeneration",
        "replicas",
        "updatedReplicas",
        "availableReplicas",
        "unavailableReplicas"
      ],
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "details": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentDetails"
        },
        "latestVersion": {
          "type": "integer",
          "format": "int64"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "unavailableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentDetails": {
      "type": "object",
      "required": [
        "causes"
      ],
      "properties": {
        "causes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentCause"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentLog": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeploymentLog",
          "version": "v1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "DeploymentLog",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.apps.v1.DeploymentRequest": {
      "type": "object",
      "required": [
        "name",
        "latest",
        "force"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "excludeTriggers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "latest": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeploymentRequest",
          "version": "v1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "DeploymentRequest",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.apps.v1.DeploymentStrategy": {
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customParams": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.CustomDeploymentStrategyParams"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "recreateParams": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.RecreateDeploymentStrategyParams"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "rollingParams": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.RollingDeploymentStrategyParams"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentTriggerImageChangeParams": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "automatic": {
          "type": "boolean"
        },
        "containerNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "lastTriggeredImage": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.DeploymentTriggerPolicy": {
      "type": "object",
      "properties": {
        "imageChangeParams": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.DeploymentTriggerImageChangeParams"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.apps.v1.ExecNewPodHook": {
      "type": "object",
      "required": [
        "command",
        "containerName"
      ],
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containerName": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.apps.v1.LifecycleHook": {
      "type": "object",
      "required": [
        "failurePolicy"
      ],
      "properties": {
        "execNewPod": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.ExecNewPodHook"
        },
        "failurePolicy": {
          "type": "string"
        },
        "tagImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.apps.v1.TagImageHook"
          }
        }
      }
    },
    "com.github.openshift.api.apps.v1.RecreateDeploymentStrategyParams": {
      "type": "object",
      "properties": {
        "mid": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.LifecycleHook"
        },
        "post": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.LifecycleHook"
        },
        "pre": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.LifecycleHook"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.apps.v1.RollingDeploymentStrategyParams": {
      "type": "object",
      "properties": {
        "intervalSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "post": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.LifecycleHook"
        },
        "pre": {
          "$ref": "#/definitions/com.github.openshift.api.apps.v1.LifecycleHook"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "updatePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.apps.v1.TagImageHook": {
      "type": "object",
      "required": [
        "containerName",
        "to"
      ],
      "properties": {
        "containerName": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.api.authorization.v1.ClusterRole": {
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "aggregationRule": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.AggregationRule"
        },
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ClusterRole",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "ClusterRole",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.ClusterRoleBinding": {
      "type": "object",
      "required": [
        "subjects",
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          }
        },
        "userNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.ClusterRoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.ClusterRoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ClusterRoleBindingList",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "ClusterRoleBindingList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.ClusterRoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.ClusterRole"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ClusterRoleList",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "ClusterRoleList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.LocalResourceAccessReview": {
      "type": "object",
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "isNonResourceURL": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "resourceAPIGroup": {
          "type": "string"
        },
        "resourceAPIVersion": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LocalResourceAccessReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "LocalResourceAccessReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.LocalSubjectAccessReview": {
      "type": "object",
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isNonResourceURL": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "resourceAPIGroup": {
          "type": "string"
        },
        "resourceAPIVersion": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LocalSubjectAccessReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "LocalSubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.PolicyRule": {
      "type": "object",
      "required": [
        "verbs",
        "resources"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributeRestrictions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.authorization.v1.ResourceAccessReview": {
      "type": "object",
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "isNonResourceURL": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "resourceAPIGroup": {
          "type": "string"
        },
        "resourceAPIVersion": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceAccessReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "ResourceAccessReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.Role": {
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Role",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "Role",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.RoleBinding": {
      "type": "object",
      "required": [
        "subjects",
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "groupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          }
        },
        "userNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "RoleBinding",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "RoleBinding",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.RoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.RoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "RoleBindingList",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "RoleBindingList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.RoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.Role"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "RoleList",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "RoleList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.SelfSubjectRulesReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.authorization.v1.SelfSubjectRulesReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.authorization.v1.SubjectRulesReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "SelfSubjectRulesReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "SelfSubjectRulesReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.SelfSubjectRulesReviewSpec": {
      "type": "object",
      "required": [
        "scopes"
      ],
      "properties": {
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.authorization.v1.SubjectAccessReview": {
      "type": "object",
      "required": [
        "namespace",
        "verb",
        "resourceAPIGroup",
        "resourceAPIVersion",
        "resource",
        "resourceName",
        "path",
        "isNonResourceURL",
        "user",
        "groups",
        "scopes"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isNonResourceURL": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "resourceAPIGroup": {
          "type": "string"
        },
        "resourceAPIVersion": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "SubjectAccessReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "SubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.SubjectRulesReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.authorization.v1.SubjectRulesReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.authorization.v1.SubjectRulesReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "SubjectRulesReview",
          "version": "v1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "SubjectRulesReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.authorization.v1.SubjectRulesReviewSpec": {
      "type": "object",
      "required": [
        "user",
        "groups",
        "scopes"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.authorization.v1.SubjectRulesReviewStatus": {
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "evaluationError": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.authorization.v1.PolicyRule"
          }
        }
      }
    },
    "com.github.openshift.api.build.v1.BinaryBuildSource": {
      "type": "object",
      "properties": {
        "asFile": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BitbucketWebHookCause": {
      "type": "object",
      "properties": {
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.Build": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Build",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "Build",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildConfig": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildConfigSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildConfigStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "BuildConfig",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "BuildConfig",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildConfigList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildConfig"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "BuildConfigList",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "BuildConfigList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildConfigSpec": {
      "type": "object",
      "required": [
        "strategy"
      ],
      "properties": {
        "completionDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "failedBuildsHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildOutput"
        },
        "postCommit": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildPostCommitSpec"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "runPolicy": {
          "type": "string"
        },
        "serviceAccount": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildSource"
        },
        "strategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildStrategy"
        },
        "successfulBuildsHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildTriggerPolicy"
          }
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildConfigStatus": {
      "type": "object",
      "required": [
        "lastVersion"
      ],
      "properties": {
        "lastVersion": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.Build"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "BuildList",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "BuildList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildLog": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "BuildLog",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "BuildLog",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildOutput": {
      "type": "object",
      "properties": {
        "imageLabels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.ImageLabel"
          }
        },
        "pushSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "to": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildPostCommitSpec": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "script": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "binary": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BinaryBuildSource"
        },
        "dockerStrategyOptions": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.DockerStrategyOptions"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "kind": {
          "type": "string"
        },
        "lastVersion": {
          "type": "integer",
          "format": "int64"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "sourceStrategyOptions": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceStrategyOptions"
        },
        "triggeredBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildTriggerCause"
          }
        },
        "triggeredByImage": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "BuildRequest",
          "version": "v1"
        },
        {
          "group": "build.openshift.io",
          "kind": "BuildRequest",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.build.v1.BuildSource": {
      "type": "object",
      "properties": {
        "binary": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BinaryBuildSource"
        },
        "configMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.ConfigMapBuildSource"
          }
        },
        "contextDir": {
          "type": "string"
        },
        "dockerfile": {
          "type": "string"
        },
        "git": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.GitBuildSource"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.ImageSource"
          }
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.SecretBuildSource"
          }
        },
        "sourceSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildSpec": {
      "type": "object",
      "required": [
        "strategy"
      ],
      "properties": {
        "completionDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "output": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildOutput"
        },
        "postCommit": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildPostCommitSpec"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "serviceAccount": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildSource"
        },
        "strategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildStrategy"
        },
        "triggeredBy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildTriggerCause"
          }
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildStatus": {
      "type": "object",
      "required": [
        "phase"
      ],
      "properties": {
        "cancelled": {
          "type": "boolean"
        },
        "completionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "config": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "duration": {
          "type": "integer",
          "format": "int64"
        },
        "logSnippet": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "output": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildStatusOutput"
        },
        "outputDockerImageReference": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.StageInfo"
          }
        },
        "startTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildStatusOutput": {
      "type": "object",
      "properties": {
        "to": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BuildStatusOutputTo"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildStatusOutputTo": {
      "type": "object",
      "properties": {
        "imageDigest": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildStrategy": {
      "type": "object",
      "properties": {
        "customStrategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.CustomBuildStrategy"
        },
        "dockerStrategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.DockerBuildStrategy"
        },
        "jenkinsPipelineStrategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.JenkinsPipelineBuildStrategy"
        },
        "sourceStrategy": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceBuildStrategy"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildTriggerCause": {
      "type": "object",
      "properties": {
        "bitbucketWebHook": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.BitbucketWebHookCause"
        },
        "genericWebHook": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.GenericWebHookCause"
        },
        "githubWebHook": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.GitHubWebHookCause"
        },
        "gitlabWebHook": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.GitLabWebHookCause"
        },
        "imageChangeBuild": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.ImageChangeCause"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.BuildTriggerPolicy": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "bitbucket": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.WebHookTrigger"
        },
        "generic": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.WebHookTrigger"
        },
        "github": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.WebHookTrigger"
        },
        "gitlab": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.WebHookTrigger"
        },
        "imageChange": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.ImageChangeTrigger"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.ConfigMapBuildSource": {
      "type": "object",
      "required": [
        "configMap"
      ],
      "properties": {
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "destinationDir": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.CustomBuildStrategy": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "buildAPIVersion": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "exposeDockerSocket": {
          "type": "boolean"
        },
        "forcePull": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "pullSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.SecretSpec"
          }
        }
      }
    },
    "com.github.openshift.api.build.v1.DockerBuildStrategy": {
      "type": "object",
      "properties": {
        "buildArgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "dockerfilePath": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "forcePull": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "imageOptimizationPolicy": {
          "type": "string"
        },
        "noCache": {
          "type": "boolean"
        },
        "pullSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "com.github.openshift.api.build.v1.DockerStrategyOptions": {
      "type": "object",
      "properties": {
        "buildArgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "noCache": {
          "type": "boolean"
        }
      }
    },
    "com.github.openshift.api.build.v1.GenericWebHookCause": {
      "type": "object",
      "properties": {
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.GitBuildSource": {
      "type": "object",
      "required": [
        "uri"
      ],
      "properties": {
        "httpProxy": {
          "type": "string"
        },
        "httpsProxy": {
          "type": "string"
        },
        "noProxy": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.GitHubWebHookCause": {
      "type": "object",
      "properties": {
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.GitLabWebHookCause": {
      "type": "object",
      "properties": {
        "revision": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceRevision"
        },
        "secret": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.GitSourceRevision": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceControlUser"
        },
        "commit": {
          "type": "string"
        },
        "committer": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SourceControlUser"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.ImageChangeCause": {
      "type": "object",
      "properties": {
        "fromRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "imageID": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.ImageChangeTrigger": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "lastTriggeredImageID": {
          "type": "string"
        },
        "paused": {
          "type": "boolean"
        }
      }
    },
    "com.github.openshift.api.build.v1.ImageLabel": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.ImageSource": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "as": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.ImageSourcePath"
          }
        },
        "pullSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "com.github.openshift.api.build.v1.ImageSourcePath": {
      "type": "object",
      "required": [
        "sourcePath",
        "destinationDir"
      ],
      "properties": {
        "destinationDir": {
          "type": "string"
        },
        "sourcePath": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.JenkinsPipelineBuildStrategy": {
      "type": "object",
      "properties": {
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "jenkinsfile": {
          "type": "string"
        },
        "jenkinsfilePath": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.SecretBuildSource": {
      "type": "object",
      "required": [
        "secret"
      ],
      "properties": {
        "destinationDir": {
          "type": "string"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "com.github.openshift.api.build.v1.SecretLocalReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.SecretSpec": {
      "type": "object",
      "required": [
        "secretSource",
        "mountPath"
      ],
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "secretSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "com.github.openshift.api.build.v1.SourceBuildStrategy": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "forcePull": {
          "type": "boolean"
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "incremental": {
          "type": "boolean"
        },
        "pullSecret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "scripts": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.SourceControlUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.SourceRevision": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "git": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.GitSourceRevision"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.build.v1.SourceStrategyOptions": {
      "type": "object",
      "properties": {
        "incremental": {
          "type": "boolean"
        }
      }
    },
    "com.github.openshift.api.build.v1.StageInfo": {
      "type": "object",
      "properties": {
        "durationMilliseconds": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.build.v1.StepInfo"
          }
        }
      }
    },
    "com.github.openshift.api.build.v1.StepInfo": {
      "type": "object",
      "properties": {
        "durationMilliseconds": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "com.github.openshift.api.build.v1.WebHookTrigger": {
      "type": "object",
      "properties": {
        "allowEnv": {
          "type": "boolean"
        },
        "secret": {
          "type": "string"
        },
        "secretReference": {
          "$ref": "#/definitions/com.github.openshift.api.build.v1.SecretLocalReference"
        }
      }
    },
    "com.github.openshift.api.image.v1.Image": {
      "type": "object",
      "required": [
        "dockerImageLayers"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "dockerImageConfig": {
          "type": "string"
        },
        "dockerImageLayers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageLayer"
          }
        },
        "dockerImageManifest": {
          "type": "string"
        },
        "dockerImageManifestMediaType": {
          "type": "string"
        },
        "dockerImageMetadata": {
          "x-kubernetes-patch-strategy": "replace",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "dockerImageMetadataVersion": {
          "type": "string"
        },
        "dockerImageReference": {
          "type": "string"
        },
        "dockerImageSignatures": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageSignature"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Image",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "Image",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageBlobReferences": {
      "type": "object",
      "properties": {
        "config": {
          "type": "string"
        },
        "imageMissing": {
          "type": "boolean"
        },
        "layers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageImportSpec": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "importPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagImportPolicy"
        },
        "includeManifest": {
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReferencePolicy"
        },
        "to": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageImportStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageLayer": {
      "type": "object",
      "required": [
        "name",
        "size",
        "mediaType"
      ],
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageLayerData": {
      "type": "object",
      "required": [
        "size",
        "mediaType"
      ],
      "properties": {
        "mediaType": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageList",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageLookupPolicy": {
      "type": "object",
      "required": [
        "local"
      ],
      "properties": {
        "local": {
          "type": "boolean"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageSignature": {
      "type": "object",
      "required": [
        "type",
        "content"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.SignatureCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "content": {
          "type": "string",
          "format": "byte"
        },
        "created": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "imageIdentity": {
          "type": "string"
        },
        "issuedBy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.SignatureIssuer"
        },
        "issuedTo": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.SignatureSubject"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "signedClaims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageSignature",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageSignature",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStream": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStreamSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStreamStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStream",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStream",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamImage": {
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamImage",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamImage",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamImport": {
      "type": "object",
      "required": [
        "spec",
        "status"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStreamImportSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStreamImportStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamImport",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamImport",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamImportSpec": {
      "type": "object",
      "required": [
        "import"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageImportSpec"
          }
        },
        "import": {
          "type": "boolean"
        },
        "repository": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.RepositoryImportSpec"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageStreamImportStatus": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageImportStatus"
          }
        },
        "import": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStream"
        },
        "repository": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.RepositoryImportStatus"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageStreamLayers": {
      "type": "object",
      "required": [
        "blobs",
        "images"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blobs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageLayerData"
          }
        },
        "images": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageBlobReferences"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamLayers",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStream"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamList",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamMapping": {
      "type": "object",
      "required": [
        "image",
        "tag"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "tag": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamMapping",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamMapping",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamSpec": {
      "type": "object",
      "properties": {
        "dockerImageRepository": {
          "type": "string"
        },
        "lookupPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageLookupPolicy"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageStreamStatus": {
      "type": "object",
      "required": [
        "dockerImageRepository"
      ],
      "properties": {
        "dockerImageRepository": {
          "type": "string"
        },
        "publicDockerImageRepository": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.NamedTagEventList"
          },
          "x-kubernetes-patch-merge-key": "tag",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "com.github.openshift.api.image.v1.ImageStreamTag": {
      "type": "object",
      "required": [
        "tag",
        "generation",
        "lookupPolicy",
        "image"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.TagEventCondition"
          }
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
        },
        "kind": {
          "type": "string"
        },
        "lookupPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageLookupPolicy"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "tag": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReference"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamTag",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamTag",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageStreamTagList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageStreamTag"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ImageStreamTagList",
          "version": "v1"
        },
        {
          "group": "image.openshift.io",
          "kind": "ImageStreamTagList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageTag": {
      "type": "object",
      "required": [
        "spec",
        "status",
        "image"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.Image"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReference"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.NamedTagEventList"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "image.openshift.io",
          "kind": "ImageTag",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.ImageTagList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageTag"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "image.openshift.io",
          "kind": "ImageTagList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.NamedTagEventList": {
      "type": "object",
      "required": [
        "tag",
        "items"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.TagEventCondition"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.TagEvent"
          }
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.RepositoryImportSpec": {
      "type": "object",
      "required": [
        "from"
      ],
      "properties": {
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "importPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagImportPolicy"
        },
        "includeManifest": {
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReferencePolicy"
        }
      }
    },
    "com.github.openshift.api.image.v1.RepositoryImportStatus": {
      "type": "object",
      "properties": {
        "additionalTags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.image.v1.ImageImportStatus"
          }
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
        }
      }
    },
    "com.github.openshift.api.image.v1.SecretList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Secret"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "image.openshift.io",
          "kind": "SecretList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.image.v1.SignatureCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.SignatureIssuer": {
      "type": "object",
      "properties": {
        "commonName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.SignatureSubject": {
      "type": "object",
      "required": [
        "publicKeyID"
      ],
      "properties": {
        "commonName": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        },
        "publicKeyID": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.TagEvent": {
      "type": "object",
      "required": [
        "created",
        "dockerImageReference",
        "image",
        "generation"
      ],
      "properties": {
        "created": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "dockerImageReference": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.TagEventCondition": {
      "type": "object",
      "required": [
        "type",
        "status",
        "generation"
      ],
      "properties": {
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.image.v1.TagImportPolicy": {
      "type": "object",
      "properties": {
        "insecure": {
          "type": "boolean"
        },
        "scheduled": {
          "type": "boolean"
        }
      }
    },
    "com.github.openshift.api.image.v1.TagReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "from": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "importPolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagImportPolicy"
        },
        "name": {
          "type": "string"
        },
        "reference": {
          "type": "boolean"
        },
        "referencePolicy": {
          "$ref": "#/definitions/com.github.openshift.api.image.v1.TagReferencePolicy"
        }
      }
    },
    "com.github.openshift.api.image.v1.TagReferencePolicy": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.oauth.v1.ClusterRoleScopeRestriction": {
      "type": "object",
      "required": [
        "roleNames",
        "namespaces",
        "allowEscalation"
      ],
      "properties": {
        "allowEscalation": {
          "type": "boolean"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.oauth.v1.OAuthAccessToken": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "authorizeToken": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int64"
        },
        "inactivityTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "redirectURI": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userName": {
          "type": "string"
        },
        "userUID": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthAccessToken",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthAccessTokenList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.OAuthAccessToken"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthAccessTokenList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthAuthorizeToken": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "codeChallenge": {
          "type": "string"
        },
        "codeChallengeMethod": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "redirectURI": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "userUID": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthAuthorizeToken",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthAuthorizeTokenList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.OAuthAuthorizeToken"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthAuthorizeTokenList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthClient": {
      "type": "object",
      "properties": {
        "accessTokenInactivityTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "accessTokenMaxAgeSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "additionalSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiVersion": {
          "type": "string"
        },
        "grantMethod": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "redirectURIs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "respondWithChallenges": {
          "type": "boolean"
        },
        "scopeRestrictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.ScopeRestriction"
          }
        },
        "secret": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthClient",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthClientAuthorization": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userName": {
          "type": "string"
        },
        "userUID": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthClientAuthorization",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthClientAuthorizationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.OAuthClientAuthorization"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthClientAuthorizationList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.OAuthClientList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.OAuthClient"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "OAuthClientList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.ScopeRestriction": {
      "type": "object",
      "properties": {
        "clusterRole": {
          "$ref": "#/definitions/com.github.openshift.api.oauth.v1.ClusterRoleScopeRestriction"
        },
        "literals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.oauth.v1.UserOAuthAccessToken": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "authorizeToken": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int64"
        },
        "inactivityTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "redirectURI": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userName": {
          "type": "string"
        },
        "userUID": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "UserOAuthAccessToken",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.oauth.v1.UserOAuthAccessTokenList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.oauth.v1.UserOAuthAccessToken"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "oauth.openshift.io",
          "kind": "UserOAuthAccessTokenList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.project.v1.Project": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.project.v1.ProjectSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.project.v1.ProjectStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Project",
          "version": "v1"
        },
        {
          "group": "project.openshift.io",
          "kind": "Project",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.project.v1.ProjectList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.project.v1.Project"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ProjectList",
          "version": "v1"
        },
        {
          "group": "project.openshift.io",
          "kind": "ProjectList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.project.v1.ProjectRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ProjectRequest",
          "version": "v1"
        },
        {
          "group": "project.openshift.io",
          "kind": "ProjectRequest",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.project.v1.ProjectSpec": {
      "type": "object",
      "properties": {
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "com.github.openshift.api.project.v1.ProjectStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.quota.v1.AppliedClusterResourceQuota": {
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.quota.v1.ClusterResourceQuotaSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.quota.v1.ClusterResourceQuotaStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "AppliedClusterResourceQuota",
          "version": "v1"
        },
        {
          "group": "quota.openshift.io",
          "kind": "AppliedClusterResourceQuota",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.quota.v1.AppliedClusterResourceQuotaList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.quota.v1.AppliedClusterResourceQuota"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "AppliedClusterResourceQuotaList",
          "version": "v1"
        },
        {
          "group": "quota.openshift.io",
          "kind": "AppliedClusterResourceQuotaList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.quota.v1.ClusterResourceQuotaSelector": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "com.github.openshift.api.quota.v1.ClusterResourceQuotaSpec": {
      "type": "object",
      "required": [
        "selector",
        "quota"
      ],
      "properties": {
        "quota": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec"
        },
        "selector": {
          "$ref": "#/definitions/com.github.openshift.api.quota.v1.ClusterResourceQuotaSelector"
        }
      }
    },
    "com.github.openshift.api.quota.v1.ClusterResourceQuotaStatus": {
      "type": "object",
      "required": [
        "total"
      ],
      "properties": {
        "namespaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.quota.v1.ResourceQuotaStatusByNamespace"
          }
        },
        "total": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus"
        }
      }
    },
    "com.github.openshift.api.quota.v1.ResourceQuotaStatusByNamespace": {
      "type": "object",
      "required": [
        "namespace",
        "status"
      ],
      "properties": {
        "namespace": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus"
        }
      }
    },
    "com.github.openshift.api.route.v1.Route": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Route",
          "version": "v1"
        },
        {
          "group": "route.openshift.io",
          "kind": "Route",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.route.v1.RouteIngress": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteIngressCondition"
          }
        },
        "host": {
          "type": "string"
        },
        "routerCanonicalHostname": {
          "type": "string"
        },
        "routerName": {
          "type": "string"
        },
        "wildcardPolicy": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.route.v1.RouteIngressCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.route.v1.RouteList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.route.v1.Route"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "RouteList",
          "version": "v1"
        },
        {
          "group": "route.openshift.io",
          "kind": "RouteList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.route.v1.RoutePort": {
      "type": "object",
      "required": [
        "targetPort"
      ],
      "properties": {
        "targetPort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "com.github.openshift.api.route.v1.RouteSpec": {
      "type": "object",
      "required": [
        "to"
      ],
      "properties": {
        "alternateBackends": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteTargetReference"
          }
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/com.github.openshift.api.route.v1.RoutePort"
        },
        "subdomain": {
          "type": "string"
        },
        "tls": {
          "$ref": "#/definitions/com.github.openshift.api.route.v1.TLSConfig"
        },
        "to": {
          "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteTargetReference"
        },
        "wildcardPolicy": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.route.v1.RouteStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.route.v1.RouteIngress"
          }
        }
      }
    },
    "com.github.openshift.api.route.v1.RouteTargetReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "com.github.openshift.api.route.v1.TLSConfig": {
      "type": "object",
      "required": [
        "termination"
      ],
      "properties": {
        "caCertificate": {
          "type": "string"
        },
        "certificate": {
          "type": "string"
        },
        "destinationCACertificate": {
          "type": "string"
        },
        "insecureEdgeTerminationPolicy": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "termination": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicyReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicyReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicyReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodSecurityPolicyReview",
          "version": "v1"
        },
        {
          "group": "security.openshift.io",
          "kind": "PodSecurityPolicyReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicyReviewSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "serviceAccountNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicyReviewStatus": {
      "type": "object",
      "required": [
        "allowedServiceAccounts"
      ],
      "properties": {
        "allowedServiceAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.security.v1.ServiceAccountPodSecurityPolicyReviewStatus"
          }
        }
      }
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicySelfSubjectReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicySelfSubjectReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodSecurityPolicySelfSubjectReview",
          "version": "v1"
        },
        {
          "group": "security.openshift.io",
          "kind": "PodSecurityPolicySelfSubjectReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicySelfSubjectReviewSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodSecurityPolicySubjectReview",
          "version": "v1"
        },
        {
          "group": "security.openshift.io",
          "kind": "PodSecurityPolicySubjectReview",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.security.v1.PodSecurityPolicySubjectReviewStatus": {
      "type": "object",
      "properties": {
        "allowedBy": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "reason": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.api.security.v1.RangeAllocation": {
      "type": "object",
      "required": [
        "range",
        "data"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "range": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "security.openshift.io",
          "kind": "RangeAllocation",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.security.v1.RangeAllocationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.security.v1.RangeAllocation"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "security.openshift.io",
          "kind": "RangeAllocationList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.security.v1.ServiceAccountPodSecurityPolicyReviewStatus": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "allowedBy": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "name": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "com.github.openshift.api.template.v1.BrokerTemplateInstance": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.template.v1.BrokerTemplateInstanceSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "template.openshift.io",
          "kind": "BrokerTemplateInstance",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.template.v1.BrokerTemplateInstanceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.BrokerTemplateInstance"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "template.openshift.io",
          "kind": "BrokerTemplateInstanceList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.template.v1.BrokerTemplateInstanceSpec": {
      "type": "object",
      "required": [
        "templateInstance",
        "secret"
      ],
      "properties": {
        "bindingIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "templateInstance": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.api.template.v1.Parameter": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "generate": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.template.v1.Template": {
      "type": "object",
      "required": [
        "objects"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.Parameter"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ProcessedTemplate",
          "version": "v1"
        },
        {
          "group": "",
          "kind": "Template",
          "version": "v1"
        },
        {
          "group": "",
          "kind": "TemplateConfig",
          "version": "v1"
        },
        {
          "group": "template.openshift.io",
          "kind": "Template",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.template.v1.TemplateInstance": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstanceSpec"
        },
        "status": {
          "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstanceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "template.openshift.io",
          "kind": "TemplateInstance",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.template.v1.TemplateInstanceCondition": {
      "type": "object",
      "required": [
        "type",
        "status",
        "lastTransitionTime",
        "reason",
        "message"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.template.v1.TemplateInstanceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstance"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "template.openshift.io",
          "kind": "TemplateInstanceList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.template.v1.TemplateInstanceObject": {
      "type": "object",
      "properties": {
        "ref": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "com.github.openshift.api.template.v1.TemplateInstanceRequester": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "com.github.openshift.api.template.v1.TemplateInstanceSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "requester": {
          "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstanceRequester"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "template": {
          "$ref": "#/definitions/com.github.openshift.api.template.v1.Template"
        }
      }
    },
    "com.github.openshift.api.template.v1.TemplateInstanceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstanceCondition"
          }
        },
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.TemplateInstanceObject"
          }
        }
      }
    },
    "com.github.openshift.api.template.v1.TemplateList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.template.v1.Template"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "TemplateList",
          "version": "v1"
        },
        {
          "group": "template.openshift.io",
          "kind": "TemplateList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.Group": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "Group",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.GroupList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.user.v1.Group"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "GroupList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.Identity": {
      "type": "object",
      "required": [
        "providerName",
        "providerUserName",
        "user"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "providerName": {
          "type": "string"
        },
        "providerUserName": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "Identity",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.IdentityList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.user.v1.Identity"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "IdentityList",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.User": {
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "identities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "User",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.UserIdentityMapping": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "UserIdentityMapping",
          "version": "v1"
        }
      ]
    },
    "com.github.openshift.api.user.v1.UserList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.github.openshift.api.user.v1.User"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "user.openshift.io",
          "kind": "UserList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhook": {
      "type": "object",
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "properties": {
        "admissionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "reinvocationPolicy": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          }
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhook"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.MutatingWebhookConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.MutatingWebhookConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfigurationList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.RuleWithOperations": {
      "type": "object",
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1.ServiceReference": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhook": {
      "type": "object",
      "required": [
        "name",
        "clientConfig",
        "sideEffects",
        "admissionReviewVersions"
      ],
      "properties": {
        "admissionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.RuleWithOperations"
          }
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhook"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfiguration",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.ValidatingWebhookConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ValidatingWebhookConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfigurationList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1.WebhookClientConfig": {
      "type": "object",
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1beta1.MutatingWebhook": {
      "type": "object",
      "required": [
        "name",
        "clientConfig"
      ],
      "properties": {
        "admissionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "reinvocationPolicy": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.RuleWithOperations"
          }
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MutatingWebhook"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfiguration",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.MutatingWebhookConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "MutatingWebhookConfigurationList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.RuleWithOperations": {
      "type": "object",
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scope": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1beta1.ServiceReference": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhook": {
      "type": "object",
      "required": [
        "name",
        "clientConfig"
      ],
      "properties": {
        "admissionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig"
        },
        "failurePolicy": {
          "type": "string"
        },
        "matchPolicy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "objectSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.RuleWithOperations"
          }
        },
        "sideEffects": {
          "type": "string"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "webhooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingWebhook"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfiguration",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ValidatingWebhookConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "admissionregistration.k8s.io",
          "kind": "ValidatingWebhookConfigurationList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.admissionregistration.v1beta1.WebhookClientConfig": {
      "type": "object",
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.admissionregistration.v1beta1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.ControllerRevision": {
      "type": "object",
      "required": [
        "revision"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "revision": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ControllerRevision",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ControllerRevisionList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ControllerRevision"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ControllerRevisionList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSet": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DaemonSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSetCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.DaemonSetList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSet"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DaemonSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DaemonSetSpec": {
      "type": "object",
      "required": [
        "selector",
        "template"
      ],
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetUpdateStrategy"
        }
      }
    },
    "io.k8s.api.apps.v1.DaemonSetStatus": {
      "type": "object",
      "required": [
        "currentNumberScheduled",
        "numberMisscheduled",
        "desiredNumberScheduled",
        "numberReady"
      ],
      "properties": {
        "collisionCount": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DaemonSetCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentNumberScheduled": {
          "type": "integer",
          "format": "int32"
        },
        "desiredNumberScheduled": {
          "type": "integer",
          "format": "int32"
        },
        "numberAvailable": {
          "type": "integer",
          "format": "int32"
        },
        "numberMisscheduled": {
          "type": "integer",
          "format": "int32"
        },
        "numberReady": {
          "type": "integer",
          "format": "int32"
        },
        "numberUnavailable": {
          "type": "integer",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "updatedNumberScheduled": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.apps.v1.DaemonSetUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDaemonSet"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.Deployment": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "Deployment",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DeploymentCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.DeploymentList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.Deployment"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "DeploymentList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.DeploymentSpec": {
      "type": "object",
      "required": [
        "selector",
        "template"
      ],
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "paused": {
          "type": "boolean"
        },
        "progressDeadlineSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "strategy": {
          "x-kubernetes-patch-strategy": "retainKeys",
          "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentStrategy"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "io.k8s.api.apps.v1.DeploymentStatus": {
      "type": "object",
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "collisionCount": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.DeploymentCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "unavailableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.apps.v1.DeploymentStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateDeployment"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.ReplicaSet": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ReplicaSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ReplicaSetCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.ReplicaSetList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSet"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "ReplicaSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.ReplicaSetSpec": {
      "type": "object",
      "required": [
        "selector"
      ],
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "io.k8s.api.apps.v1.ReplicaSetStatus": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.ReplicaSetCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.apps.v1.RollingUpdateDaemonSet": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.apps.v1.RollingUpdateDeployment": {
      "type": "object",
      "properties": {
        "maxSurge": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy": {
      "type": "object",
      "properties": {
        "partition": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.apps.v1.StatefulSet": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "StatefulSet",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.StatefulSetCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.apps.v1.StatefulSetList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSet"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps",
          "kind": "StatefulSetList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.apps.v1.StatefulSetSpec": {
      "type": "object",
      "required": [
        "selector",
        "template",
        "serviceName"
      ],
      "properties": {
        "podManagementPolicy": {
          "type": "string"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "revisionHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "serviceName": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        },
        "updateStrategy": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetUpdateStrategy"
        },
        "volumeClaimTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        }
      }
    },
    "io.k8s.api.apps.v1.StatefulSetStatus": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "collisionCount": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.apps.v1.StatefulSetCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "currentRevision": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "updateRevision": {
          "type": "string"
        },
        "updatedReplicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.apps.v1.StatefulSetUpdateStrategy": {
      "type": "object",
      "properties": {
        "rollingUpdate": {
          "$ref": "#/definitions/io.k8s.api.apps.v1.RollingUpdateStatefulSetStrategy"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1.BoundObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1.TokenRequest": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "TokenRequest",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authentication.v1.TokenRequestSpec": {
      "type": "object",
      "required": [
        "audiences"
      ],
      "properties": {
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "boundObjectRef": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.BoundObjectReference"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.authentication.v1.TokenRequestStatus": {
      "type": "object",
      "required": [
        "token",
        "expirationTimestamp"
      ],
      "properties": {
        "expirationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1.TokenReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.TokenReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "TokenReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authentication.v1.TokenReviewSpec": {
      "type": "object",
      "properties": {
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1.TokenReviewStatus": {
      "type": "object",
      "properties": {
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authenticated": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1.UserInfo"
        }
      }
    },
    "io.k8s.api.authentication.v1.UserInfo": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1beta1.TokenReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1beta1.TokenReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1beta1.TokenReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authentication.k8s.io",
          "kind": "TokenReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authentication.v1beta1.TokenReviewSpec": {
      "type": "object",
      "properties": {
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "token": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authentication.v1beta1.TokenReviewStatus": {
      "type": "object",
      "properties": {
        "audiences": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authenticated": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.authentication.v1beta1.UserInfo"
        }
      }
    },
    "io.k8s.api.authentication.v1beta1.UserInfo": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uid": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.LocalSubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "LocalSubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.NonResourceAttributes": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.NonResourceRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.authorization.v1.ResourceAttributes": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.ResourceRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.authorization.v1.SelfSubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SelfSubjectAccessReviewSpec": {
      "type": "object",
      "properties": {
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes"
        }
      }
    },
    "io.k8s.api.authorization.v1.SelfSubjectRulesReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectRulesReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectRulesReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SelfSubjectRulesReviewSpec": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.SubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SubjectAccessReview",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.authorization.v1.SubjectAccessReviewSpec": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceAttributes"
        },
        "uid": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.SubjectAccessReviewStatus": {
      "type": "object",
      "required": [
        "allowed"
      ],
      "properties": {
        "allowed": {
          "type": "boolean"
        },
        "denied": {
          "type": "boolean"
        },
        "evaluationError": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1.SubjectRulesReviewStatus": {
      "type": "object",
      "required": [
        "resourceRules",
        "nonResourceRules",
        "incomplete"
      ],
      "properties": {
        "evaluationError": {
          "type": "string"
        },
        "incomplete": {
          "type": "boolean"
        },
        "nonResourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1.NonResourceRule"
          }
        },
        "resourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1.ResourceRule"
          }
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.LocalSubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "LocalSubjectAccessReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authorization.v1beta1.NonResourceAttributes": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.NonResourceRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.ResourceAttributes": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "verb": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.ResourceRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.SelfSubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SelfSubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectAccessReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authorization.v1beta1.SelfSubjectAccessReviewSpec": {
      "type": "object",
      "properties": {
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.ResourceAttributes"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.SelfSubjectRulesReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SelfSubjectRulesReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectRulesReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SelfSubjectRulesReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authorization.v1beta1.SelfSubjectRulesReviewSpec": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.SubjectAccessReview": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "authorization.k8s.io",
          "kind": "SubjectAccessReview",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.authorization.v1beta1.SubjectAccessReviewSpec": {
      "type": "object",
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "group": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.NonResourceAttributes"
        },
        "resourceAttributes": {
          "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.ResourceAttributes"
        },
        "uid": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.SubjectAccessReviewStatus": {
      "type": "object",
      "required": [
        "allowed"
      ],
      "properties": {
        "allowed": {
          "type": "boolean"
        },
        "denied": {
          "type": "boolean"
        },
        "evaluationError": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.authorization.v1beta1.SubjectRulesReviewStatus": {
      "type": "object",
      "required": [
        "resourceRules",
        "nonResourceRules",
        "incomplete"
      ],
      "properties": {
        "evaluationError": {
          "type": "string"
        },
        "incomplete": {
          "type": "boolean"
        },
        "nonResourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.NonResourceRule"
          }
        },
        "resourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.authorization.v1beta1.ResourceRule"
          }
        }
      }
    },
    "io.k8s.api.autoscaling.v1.CrossVersionObjectReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v1.HorizontalPodAutoscaler"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscalerList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerSpec": {
      "type": "object",
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "properties": {
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.CrossVersionObjectReference"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.autoscaling.v1.HorizontalPodAutoscalerStatus": {
      "type": "object",
      "required": [
        "currentReplicas",
        "desiredReplicas"
      ],
      "properties": {
        "currentCPUUtilizationPercentage": {
          "type": "integer",
          "format": "int32"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "lastScaleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.autoscaling.v1.Scale": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "Scale",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v1.ScaleSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.autoscaling.v1.ScaleStatus": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v1.Scale_v2": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v1.ScaleStatus"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricSource": {
      "type": "object",
      "required": [
        "name",
        "container"
      ],
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "targetAverageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "targetAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricStatus": {
      "type": "object",
      "required": [
        "name",
        "currentAverageValue",
        "container"
      ],
      "properties": {
        "container": {
          "type": "string"
        },
        "currentAverageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "currentAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ExternalMetricSource": {
      "type": "object",
      "required": [
        "metricName"
      ],
      "properties": {
        "metricName": {
          "type": "string"
        },
        "metricSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "targetAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "targetValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ExternalMetricStatus": {
      "type": "object",
      "required": [
        "metricName",
        "currentValue"
      ],
      "properties": {
        "currentAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "currentValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "metricName": {
          "type": "string"
        },
        "metricSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v2beta1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscaler"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscalerList",
          "version": "v2beta1"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerSpec": {
      "type": "object",
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "properties": {
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.MetricSpec"
          }
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerStatus": {
      "type": "object",
      "required": [
        "currentReplicas",
        "desiredReplicas",
        "conditions"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.HorizontalPodAutoscalerCondition"
          }
        },
        "currentMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.MetricStatus"
          }
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "lastScaleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.MetricSpec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricSource"
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ExternalMetricSource"
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ObjectMetricSource"
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.PodsMetricSource"
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ResourceMetricSource"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.MetricStatus": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ContainerResourceMetricStatus"
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ExternalMetricStatus"
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ObjectMetricStatus"
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.PodsMetricStatus"
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ObjectMetricSource": {
      "type": "object",
      "required": [
        "target",
        "metricName",
        "targetValue"
      ],
      "properties": {
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "metricName": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference"
        },
        "targetValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ObjectMetricStatus": {
      "type": "object",
      "required": [
        "target",
        "metricName",
        "currentValue"
      ],
      "properties": {
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "currentValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "metricName": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta1.CrossVersionObjectReference"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.PodsMetricSource": {
      "type": "object",
      "required": [
        "metricName",
        "targetAverageValue"
      ],
      "properties": {
        "metricName": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "targetAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.PodsMetricStatus": {
      "type": "object",
      "required": [
        "metricName",
        "currentAverageValue"
      ],
      "properties": {
        "currentAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "metricName": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ResourceMetricSource": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "targetAverageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "targetAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta1.ResourceMetricStatus": {
      "type": "object",
      "required": [
        "name",
        "currentAverageValue"
      ],
      "properties": {
        "currentAverageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "currentAverageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricSource": {
      "type": "object",
      "required": [
        "name",
        "target",
        "container"
      ],
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricStatus": {
      "type": "object",
      "required": [
        "name",
        "current",
        "container"
      ],
      "properties": {
        "container": {
          "type": "string"
        },
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ExternalMetricSource": {
      "type": "object",
      "required": [
        "metric",
        "target"
      ],
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ExternalMetricStatus": {
      "type": "object",
      "required": [
        "metric",
        "current"
      ],
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HPAScalingPolicy": {
      "type": "object",
      "required": [
        "type",
        "value",
        "periodSeconds"
      ],
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HPAScalingRules": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HPAScalingPolicy"
          }
        },
        "selectPolicy": {
          "type": "string"
        },
        "stabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscaler",
          "version": "v2beta2"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerBehavior": {
      "type": "object",
      "properties": {
        "scaleDown": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HPAScalingRules"
        },
        "scaleUp": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HPAScalingRules"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscaler"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "autoscaling",
          "kind": "HorizontalPodAutoscalerList",
          "version": "v2beta2"
        }
      ]
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerSpec": {
      "type": "object",
      "required": [
        "scaleTargetRef",
        "maxReplicas"
      ],
      "properties": {
        "behavior": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerBehavior"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricSpec"
          }
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerStatus": {
      "type": "object",
      "required": [
        "currentReplicas",
        "desiredReplicas",
        "conditions"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.HorizontalPodAutoscalerCondition"
          }
        },
        "currentMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricStatus"
          }
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "lastScaleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.MetricIdentifier": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.MetricSpec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricSource"
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ExternalMetricSource"
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ObjectMetricSource"
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.PodsMetricSource"
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ResourceMetricSource"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.MetricStatus": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ContainerResourceMetricStatus"
        },
        "external": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ExternalMetricStatus"
        },
        "object": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ObjectMetricStatus"
        },
        "pods": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.PodsMetricStatus"
        },
        "resource": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.ResourceMetricStatus"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.MetricTarget": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.MetricValueStatus": {
      "type": "object",
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "value": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ObjectMetricSource": {
      "type": "object",
      "required": [
        "describedObject",
        "target",
        "metric"
      ],
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ObjectMetricStatus": {
      "type": "object",
      "required": [
        "metric",
        "current",
        "describedObject"
      ],
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"
        },
        "describedObject": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.PodsMetricSource": {
      "type": "object",
      "required": [
        "metric",
        "target"
      ],
      "properties": {
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.PodsMetricStatus": {
      "type": "object",
      "required": [
        "metric",
        "current"
      ],
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricIdentifier"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ResourceMetricSource": {
      "type": "object",
      "required": [
        "name",
        "target"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricTarget"
        }
      }
    },
    "io.k8s.api.autoscaling.v2beta2.ResourceMetricStatus": {
      "type": "object",
      "required": [
        "name",
        "current"
      ],
      "properties": {
        "current": {
          "$ref": "#/definitions/io.k8s.api.autoscaling.v2beta2.MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.batch.v1.Job": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "Job",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.JobCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.batch.v1.JobList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.Job"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "JobList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.batch.v1.JobSpec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "backoffLimit": {
          "type": "integer",
          "format": "int32"
        },
        "completions": {
          "type": "integer",
          "format": "int32"
        },
        "manualSelector": {
          "type": "boolean"
        },
        "parallelism": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        },
        "ttlSecondsAfterFinished": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.batch.v1.JobStatus": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "completionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1.JobCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "succeeded": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.batch.v1beta1.CronJob": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1beta1.CronJobSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.batch.v1beta1.CronJobStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "CronJob",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.batch.v1beta1.CronJobList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.batch.v1beta1.CronJob"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "batch",
          "kind": "CronJobList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.batch.v1beta1.CronJobSpec": {
      "type": "object",
      "required": [
        "schedule",
        "jobTemplate"
      ],
      "properties": {
        "concurrencyPolicy": {
          "type": "string"
        },
        "failedJobsHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "jobTemplate": {
          "$ref": "#/definitions/io.k8s.api.batch.v1beta1.JobTemplateSpec"
        },
        "schedule": {
          "type": "string"
        },
        "startingDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "successfulJobsHistoryLimit": {
          "type": "integer",
          "format": "int32"
        },
        "suspend": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.batch.v1beta1.CronJobStatus": {
      "type": "object",
      "properties": {
        "active": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          }
        },
        "lastScheduleTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.batch.v1beta1.JobTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.batch.v1.JobSpec"
        }
      }
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequest": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequest",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequest"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequestList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestSpec": {
      "type": "object",
      "required": [
        "request",
        "signerName"
      ],
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "request": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "signerName": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.certificates.v1.CertificateSigningRequestStatus": {
      "type": "object",
      "properties": {
        "certificate": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1.CertificateSigningRequestCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.certificates.v1beta1.CertificateSigningRequest": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.certificates.v1beta1.CertificateSigningRequestStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequest",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.certificates.v1beta1.CertificateSigningRequestCondition": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastUpdateTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.certificates.v1beta1.CertificateSigningRequestList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1beta1.CertificateSigningRequest"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "certificates.k8s.io",
          "kind": "CertificateSigningRequestList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.certificates.v1beta1.CertificateSigningRequestSpec": {
      "type": "object",
      "required": [
        "request"
      ],
      "properties": {
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "request": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "signerName": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.certificates.v1beta1.CertificateSigningRequestStatus": {
      "type": "object",
      "properties": {
        "certificate": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.certificates.v1beta1.CertificateSigningRequestCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.coordination.v1.Lease": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.coordination.v1.LeaseSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "Lease",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.coordination.v1.LeaseList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.coordination.v1.Lease"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "LeaseList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.coordination.v1.LeaseSpec": {
      "type": "object",
      "properties": {
        "acquireTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "holderIdentity": {
          "type": "string"
        },
        "leaseDurationSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "leaseTransitions": {
          "type": "integer",
          "format": "int32"
        },
        "renewTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.coordination.v1beta1.Lease": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.coordination.v1beta1.LeaseSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "Lease",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.coordination.v1beta1.LeaseList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.coordination.v1beta1.Lease"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "coordination.k8s.io",
          "kind": "LeaseList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.coordination.v1beta1.LeaseSpec": {
      "type": "object",
      "properties": {
        "acquireTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "holderIdentity": {
          "type": "string"
        },
        "leaseDurationSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "leaseTransitions": {
          "type": "integer",
          "format": "int32"
        },
        "renewTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
        }
      }
    },
    "io.k8s.api.core.v1.AttachedVolume": {
      "type": "object",
      "required": [
        "name",
        "devicePath"
      ],
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "type": "object",
      "required": [
        "diskName",
        "diskURI"
      ],
      "properties": {
        "cachingMode": {
          "type": "string"
        },
        "diskName": {
          "type": "string"
        },
        "diskURI": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.AzureFilePersistentVolumeSource": {
      "type": "object",
      "required": [
        "secretName",
        "shareName"
      ],
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "secretNamespace": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "type": "object",
      "required": [
        "secretName",
        "shareName"
      ],
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Binding": {
      "type": "object",
      "required": [
        "target"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "target": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Binding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.CSIPersistentVolumeSource": {
      "type": "object",
      "required": [
        "driver",
        "volumeHandle"
      ],
      "properties": {
        "controllerExpandSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "controllerPublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "nodeStageSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "volumeHandle": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.CephFSPersistentVolumeSource": {
      "type": "object",
      "required": [
        "monitors"
      ],
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "type": "object",
      "required": [
        "monitors"
      ],
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CinderPersistentVolumeSource": {
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ClientIPConfig": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.ComponentCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ComponentStatus": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ComponentCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ComponentStatus",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ComponentStatusList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ComponentStatus"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ComponentStatusList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMap": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "binaryData": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "immutable": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMap",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMap"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ConfigMapList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ConfigMapNodeConfigSource": {
      "type": "object",
      "required": [
        "namespace",
        "name",
        "kubeletConfigKey"
      ],
      "properties": {
        "kubeletConfigKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.Container": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerImage": {
      "type": "object",
      "required": [
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sizeBytes": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "type": "object",
      "required": [
        "containerPort"
      ],
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "hostIP": {
          "type": "string"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerState": {
      "type": "object",
      "properties": {
        "running": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateRunning"
        },
        "terminated": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateTerminated"
        },
        "waiting": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStateWaiting"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerStateTerminated": {
      "type": "object",
      "required": [
        "exitCode"
      ],
      "properties": {
        "containerID": {
          "type": "string"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32"
        },
        "finishedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "signal": {
          "type": "integer",
          "format": "int32"
        },
        "startedAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerStateWaiting": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerStatus": {
      "type": "object",
      "required": [
        "name",
        "ready",
        "restartCount",
        "image",
        "imageID"
      ],
      "properties": {
        "containerID": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageID": {
          "type": "string"
        },
        "lastState": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        },
        "started": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ContainerState"
        }
      }
    },
    "io.k8s.api.core.v1.DaemonEndpoint": {
      "type": "object",
      "required": [
        "Port"
      ],
      "properties": {
        "Port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.core.v1.EndpointAddress": {
      "type": "object",
      "required": [
        "ip"
      ],
      "properties": {
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "targetRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        }
      }
    },
    "io.k8s.api.core.v1.EndpointPort": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "appProtocol": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.EndpointSubset": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
          }
        },
        "notReadyAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointAddress"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointPort"
          }
        }
      }
    },
    "io.k8s.api.core.v1.Endpoints": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "subsets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EndpointSubset"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Endpoints",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EndpointsList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Endpoints"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "EndpointsList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "type": "object",
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVar": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.k8s.api.core.v1.EphemeralContainer": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          }
        },
        "readinessProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "targetContainerName": {
          "type": "string"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "volumeClaimTemplate": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        }
      }
    },
    "io.k8s.api.core.v1.Event": {
      "type": "object",
      "required": [
        "metadata",
        "involvedObject"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "eventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "firstTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "involvedObject": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "kind": {
          "type": "string"
        },
        "lastTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "reason": {
          "type": "string"
        },
        "related": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "reportingComponent": {
          "type": "string"
        },
        "reportingInstance": {
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSeries"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Event",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EventList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Event"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "EventList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EventSeries": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.core.v1.EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.FlexPersistentVolumeSource": {
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        }
      }
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "datasetUUID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "type": "object",
      "required": [
        "pdName"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "pdName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "type": "object",
      "required": [
        "repository"
      ],
      "properties": {
        "directory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GlusterfsPersistentVolumeSource": {
      "type": "object",
      "required": [
        "endpoints",
        "path"
      ],
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "endpointsNamespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "type": "object",
      "required": [
        "endpoints",
        "path"
      ],
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
          }
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Handler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        }
      }
    },
    "io.k8s.api.core.v1.HostAlias": {
      "type": "object",
      "properties": {
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ISCSIPersistentVolumeSource": {
      "type": "object",
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "targetPortal": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "type": "object",
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "targetPortal": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "type": "object",
      "required": [
        "key",
        "path"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Handler"
        },
        "preStop": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Handler"
        }
      }
    },
    "io.k8s.api.core.v1.LimitRange": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LimitRange",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.LimitRangeItem": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "default": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "defaultRequest": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "max": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "maxLimitRequestRatio": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "min": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.LimitRangeList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LimitRange"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "LimitRangeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.LimitRangeSpec": {
      "type": "object",
      "required": [
        "limits"
      ],
      "properties": {
        "limits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LimitRangeItem"
          }
        }
      }
    },
    "io.k8s.api.core.v1.LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PortStatus"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.core.v1.LoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerIngress"
          }
        }
      }
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.LocalVolumeSource": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "type": "object",
      "required": [
        "server",
        "path"
      ],
      "properties": {
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "server": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Namespace": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Namespace",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NamespaceCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.NamespaceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Namespace"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "NamespaceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NamespaceSpec": {
      "type": "object",
      "properties": {
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NamespaceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NamespaceCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Node": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Node",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NodeAddress": {
      "type": "object",
      "required": [
        "type",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      }
    },
    "io.k8s.api.core.v1.NodeCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastHeartbeatTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.NodeConfigSource": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapNodeConfigSource"
        }
      }
    },
    "io.k8s.api.core.v1.NodeConfigStatus": {
      "type": "object",
      "properties": {
        "active": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
        },
        "assigned": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
        },
        "error": {
          "type": "string"
        },
        "lastKnownGood": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
        }
      }
    },
    "io.k8s.api.core.v1.NodeDaemonEndpoints": {
      "type": "object",
      "properties": {
        "kubeletEndpoint": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DaemonEndpoint"
        }
      }
    },
    "io.k8s.api.core.v1.NodeList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Node"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "NodeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSpec": {
      "type": "object",
      "properties": {
        "configSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigSource"
        },
        "externalID": {
          "type": "string"
        },
        "podCIDR": {
          "type": "string"
        },
        "podCIDRs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "providerID": {
          "type": "string"
        },
        "taints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Taint"
          }
        },
        "unschedulable": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.NodeStatus": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeAddress"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "allocatable": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "config": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeConfigStatus"
        },
        "daemonEndpoints": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeDaemonEndpoints"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerImage"
          }
        },
        "nodeInfo": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSystemInfo"
        },
        "phase": {
          "type": "string"
        },
        "volumesAttached": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.AttachedVolume"
          }
        },
        "volumesInUse": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSystemInfo": {
      "type": "object",
      "required": [
        "machineID",
        "systemUUID",
        "bootID",
        "kernelVersion",
        "osImage",
        "containerRuntimeVersion",
        "kubeletVersion",
        "kubeProxyVersion",
        "operatingSystem",
        "architecture"
      ],
      "properties": {
        "architecture": {
          "type": "string"
        },
        "bootID": {
          "type": "string"
        },
        "containerRuntimeVersion": {
          "type": "string"
        },
        "kernelVersion": {
          "type": "string"
        },
        "kubeProxyVersion": {
          "type": "string"
        },
        "kubeletVersion": {
          "type": "string"
        },
        "machineID": {
          "type": "string"
        },
        "operatingSystem": {
          "type": "string"
        },
        "osImage": {
          "type": "string"
        },
        "systemUUID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolume": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolume",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaimList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolume"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFilePersistentVolumeSource"
        },
        "capacity": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSPersistentVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderPersistentVolumeSource"
        },
        "claimRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIPersistentVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexPersistentVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsPersistentVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIPersistentVolumeSource"
        },
        "local": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalVolumeSource"
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "nodeAffinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VolumeNodeAffinity"
        },
        "persistentVolumeReclaimPolicy": {
          "type": "string"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDPersistentVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOPersistentVolumeSource"
        },
        "storageClassName": {
          "type": "string"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSPersistentVolumeSource"
        },
        "volumeMode": {
          "type": "string"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeStatus": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "required": [
        "pdID"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "pdID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Pod": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Pod",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "type": "object",
      "required": [
        "topologyKey"
      ],
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          }
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodIP": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Pod"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodReadinessGate": {
      "type": "object",
      "required": [
        "conditionType"
      ],
      "properties": {
        "conditionType": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "type": "object",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "fsGroupChangePolicy": {
          "type": "string"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sysctls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          }
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.PodSpec": {
      "type": "object",
      "required": [
        "containers"
      ],
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "affinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "dnsConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralContainer"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Container"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodReadinessGate"
          }
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "securityContext": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySpreadConstraint"
          },
          "x-kubernetes-list-map-keys": [
            "topologyKey",
            "whenUnsatisfiable"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "topologyKey",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge,retainKeys"
        }
      }
    },
    "io.k8s.api.core.v1.PodStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "containerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          }
        },
        "ephemeralContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          }
        },
        "hostIP": {
          "type": "string"
        },
        "initContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerStatus"
          }
        },
        "message": {
          "type": "string"
        },
        "nominatedNodeName": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "podIP": {
          "type": "string"
        },
        "podIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodIP"
          },
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "qosClass": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "startTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.core.v1.PodTemplate": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodTemplate",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodTemplateList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplate"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PodTemplateList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PodTemplateSpec": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSpec"
        }
      }
    },
    "io.k8s.api.core.v1.PortStatus": {
      "type": "object",
      "required": [
        "port",
        "protocol"
      ],
      "properties": {
        "error": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "type": "object",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.Probe": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "httpGet": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
          }
        }
      }
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "type": "object",
      "required": [
        "registry",
        "volume"
      ],
      "properties": {
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "registry": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.RBDPersistentVolumeSource": {
      "type": "object",
      "required": [
        "monitors",
        "image"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "type": "object",
      "required": [
        "monitors",
        "image"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ReplicationController": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ReplicationController",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ReplicationControllerCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ReplicationControllerList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationController"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ReplicationControllerList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ReplicationControllerSpec": {
      "type": "object",
      "properties": {
        "minReadySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "template": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodTemplateSpec"
        }
      }
    },
    "io.k8s.api.core.v1.ReplicationControllerStatus": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "availableReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ReplicationControllerCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "fullyLabeledReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ResourceQuota": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuotaStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceQuota",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ResourceQuotaList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ResourceQuota"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ResourceQuotaList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ResourceQuotaSpec": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "scopeSelector": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScopeSelector"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.ResourceQuotaStatus": {
      "type": "object",
      "properties": {
        "hard": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "used": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ScaleIOPersistentVolumeSource": {
      "type": "object",
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "type": "object",
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ScopeSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ScopedResourceSelectorRequirement"
          }
        }
      }
    },
    "io.k8s.api.core.v1.ScopedResourceSelectorRequirement": {
      "type": "object",
      "required": [
        "scopeName",
        "operator"
      ],
      "properties": {
        "operator": {
          "type": "string"
        },
        "scopeName": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.Secret": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          }
        },
        "immutable": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "stringData": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Secret",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Secret"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "SecretList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
        },
        "privileged": {
          "type": "boolean"
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "windowsOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.Service": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Service",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccount": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccount",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccountList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccount"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceAccountList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ServiceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Service"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "ServiceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.ServicePort": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "appProtocol": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nodePort": {
          "type": "integer",
          "format": "int32"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "targetPort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.core.v1.ServiceSpec": {
      "type": "object",
      "properties": {
        "allocateLoadBalancerNodePorts": {
          "type": "boolean"
        },
        "clusterIP": {
          "type": "string"
        },
        "clusterIPs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "externalIPs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalName": {
          "type": "string"
        },
        "externalTrafficPolicy": {
          "type": "string"
        },
        "healthCheckNodePort": {
          "type": "integer",
          "format": "int32"
        },
        "ipFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "ipFamilyPolicy": {
          "type": "string"
        },
        "loadBalancerIP": {
          "type": "string"
        },
        "loadBalancerSourceRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
          },
          "x-kubernetes-list-map-keys": [
            "port",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "port",
          "x-kubernetes-patch-strategy": "merge"
        },
        "publishNotReadyAddresses": {
          "type": "boolean"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sessionAffinity": {
          "type": "string"
        },
        "sessionAffinityConfig": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SessionAffinityConfig"
        },
        "topologyKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ServiceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"
        }
      }
    },
    "io.k8s.api.core.v1.SessionAffinityConfig": {
      "type": "object",
      "properties": {
        "clientIP": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ClientIPConfig"
        }
      }
    },
    "io.k8s.api.core.v1.StorageOSPersistentVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Sysctl": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.core.v1.Taint": {
      "type": "object",
      "required": [
        "key",
        "effect"
      ],
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "timeAdded": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TopologySelectorLabelRequirement": {
      "type": "object",
      "required": [
        "key",
        "values"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.TopologySelectorTerm": {
      "type": "object",
      "properties": {
        "matchLabelExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorLabelRequirement"
          }
        }
      }
    },
    "io.k8s.api.core.v1.TopologySpreadConstraint": {
      "type": "object",
      "required": [
        "maxSkew",
        "topologyKey",
        "whenUnsatisfiable"
      ],
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "maxSkew": {
          "type": "integer",
          "format": "int32"
        },
        "topologyKey": {
          "type": "string"
        },
        "whenUnsatisfiable": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Volume": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "type": "object",
      "required": [
        "name",
        "devicePath"
      ],
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "mountPropagation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "subPath": {
          "type": "string"
        },
        "subPathExpr": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeNodeAffinity": {
      "type": "object",
      "properties": {
        "required": {
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"
        }
      }
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "required": [
        "volumePath"
      ],
      "properties": {
        "fsType": {
          "type": "string"
        },
        "storagePolicyID": {
          "type": "string"
        },
        "storagePolicyName": {
          "type": "string"
        },
        "volumePath": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "type": "object",
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "type": "string"
        },
        "runAsUserName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.discovery.v1beta1.Endpoint": {
      "type": "object",
      "required": [
        "addresses"
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "conditions": {
          "$ref": "#/definitions/io.k8s.api.discovery.v1beta1.EndpointConditions"
        },
        "hostname": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "targetRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "topology": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.discovery.v1beta1.EndpointConditions": {
      "type": "object",
      "properties": {
        "ready": {
          "type": "boolean"
        },
        "serving": {
          "type": "boolean"
        },
        "terminating": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.discovery.v1beta1.EndpointPort": {
      "type": "object",
      "properties": {
        "appProtocol": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.discovery.v1beta1.EndpointSlice": {
      "type": "object",
      "required": [
        "addressType",
        "endpoints"
      ],
      "properties": {
        "addressType": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1beta1.Endpoint"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1beta1.EndpointPort"
          },
          "x-kubernetes-list-type": "atomic"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "discovery.k8s.io",
          "kind": "EndpointSlice",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.discovery.v1beta1.EndpointSliceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.discovery.v1beta1.EndpointSlice"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "discovery.k8s.io",
          "kind": "EndpointSliceList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.events.v1.Event": {
      "type": "object",
      "required": [
        "metadata",
        "eventTime"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "deprecatedCount": {
          "type": "integer",
          "format": "int32"
        },
        "deprecatedFirstTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deprecatedLastTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deprecatedSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
        },
        "eventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "note": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "regarding": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "related": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "reportingController": {
          "type": "string"
        },
        "reportingInstance": {
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/io.k8s.api.events.v1.EventSeries"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "Event",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.events.v1.EventList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.events.v1.Event"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "EventList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.events.v1.EventSeries": {
      "type": "object",
      "required": [
        "count",
        "lastObservedTime"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.events.v1beta1.Event": {
      "type": "object",
      "required": [
        "metadata",
        "eventTime"
      ],
      "properties": {
        "action": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "deprecatedCount": {
          "type": "integer",
          "format": "int32"
        },
        "deprecatedFirstTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deprecatedLastTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deprecatedSource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
        },
        "eventTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "note": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "regarding": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "related": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "reportingController": {
          "type": "string"
        },
        "reportingInstance": {
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/io.k8s.api.events.v1beta1.EventSeries"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "Event",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.events.v1beta1.EventList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.events.v1beta1.Event"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "events.k8s.io",
          "kind": "EventList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.events.v1beta1.EventSeries": {
      "type": "object",
      "required": [
        "count",
        "lastObservedTime"
      ],
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.HTTPIngressPath": {
      "type": "object",
      "required": [
        "backend"
      ],
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.HTTPIngressRuleValue": {
      "type": "object",
      "required": [
        "paths"
      ],
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.HTTPIngressPath"
          }
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.Ingress": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "extensions",
          "kind": "Ingress",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.extensions.v1beta1.IngressBackend": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "serviceName": {
          "type": "string"
        },
        "servicePort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.IngressList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.Ingress"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "extensions",
          "kind": "IngressList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.extensions.v1beta1.IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.HTTPIngressRuleValue"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.IngressSpec": {
      "type": "object",
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressRule"
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.IngressTLS"
          }
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.Scale": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.extensions.v1beta1.ScaleStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apps.openshift.io",
          "kind": "Scale",
          "version": "v1"
        },
        {
          "group": "extensions",
          "kind": "Scale",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.extensions.v1beta1.ScaleSpec": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.extensions.v1beta1.ScaleStatus": {
      "type": "object",
      "required": [
        "replicas"
      ],
      "properties": {
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetSelector": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowDistinguisherMethod": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowSchema": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.FlowSchemaSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.FlowSchemaStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchema",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowSchemaCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowSchemaList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.FlowSchema"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchemaList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowSchemaSpec": {
      "type": "object",
      "required": [
        "priorityLevelConfiguration"
      ],
      "properties": {
        "distinguisherMethod": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.FlowDistinguisherMethod"
        },
        "matchingPrecedence": {
          "type": "integer",
          "format": "int32"
        },
        "priorityLevelConfiguration": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationReference"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PolicyRulesWithSubjects"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.FlowSchemaStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.FlowSchemaCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.GroupSubject": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.LimitResponse": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "queuing": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.QueuingConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "queuing": "Queuing"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.LimitedPriorityLevelConfiguration": {
      "type": "object",
      "properties": {
        "assuredConcurrencyShares": {
          "type": "integer",
          "format": "int32"
        },
        "limitResponse": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.LimitResponse"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.NonResourcePolicyRule": {
      "type": "object",
      "required": [
        "verbs",
        "nonResourceURLs"
      ],
      "properties": {
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.PolicyRulesWithSubjects": {
      "type": "object",
      "required": [
        "subjects"
      ],
      "properties": {
        "nonResourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.NonResourcePolicyRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "resourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.ResourcePolicyRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.Subject"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfiguration",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfigurationList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationSpec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "limited": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.LimitedPriorityLevelConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "limited": "Limited"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.PriorityLevelConfigurationCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.QueuingConfiguration": {
      "type": "object",
      "properties": {
        "handSize": {
          "type": "integer",
          "format": "int32"
        },
        "queueLengthLimit": {
          "type": "integer",
          "format": "int32"
        },
        "queues": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.ResourcePolicyRule": {
      "type": "object",
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "clusterScope": {
          "type": "boolean"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.ServiceAccountSubject": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1alpha1.Subject": {
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "group": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.GroupSubject"
        },
        "kind": {
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.ServiceAccountSubject"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1alpha1.UserSubject"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "kind",
          "fields-to-discriminateBy": {
            "group": "Group",
            "serviceAccount": "ServiceAccount",
            "user": "User"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1alpha1.UserSubject": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowDistinguisherMethod": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowSchema": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchema",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowSchemaCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowSchemaList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchema"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "FlowSchemaList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowSchemaSpec": {
      "type": "object",
      "required": [
        "priorityLevelConfiguration"
      ],
      "properties": {
        "distinguisherMethod": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowDistinguisherMethod"
        },
        "matchingPrecedence": {
          "type": "integer",
          "format": "int32"
        },
        "priorityLevelConfiguration": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationReference"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PolicyRulesWithSubjects"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.FlowSchemaStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.FlowSchemaCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.GroupSubject": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.LimitResponse": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "queuing": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.QueuingConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "queuing": "Queuing"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.LimitedPriorityLevelConfiguration": {
      "type": "object",
      "properties": {
        "assuredConcurrencyShares": {
          "type": "integer",
          "format": "int32"
        },
        "limitResponse": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.LimitResponse"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.NonResourcePolicyRule": {
      "type": "object",
      "required": [
        "verbs",
        "nonResourceURLs"
      ],
      "properties": {
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.PolicyRulesWithSubjects": {
      "type": "object",
      "required": [
        "subjects"
      ],
      "properties": {
        "nonResourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.NonResourcePolicyRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "resourceRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.ResourcePolicyRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.Subject"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfiguration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfiguration",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfiguration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "PriorityLevelConfigurationList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationSpec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "limited": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.LimitedPriorityLevelConfiguration"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "limited": "Limited"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.PriorityLevelConfigurationCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.QueuingConfiguration": {
      "type": "object",
      "properties": {
        "handSize": {
          "type": "integer",
          "format": "int32"
        },
        "queueLengthLimit": {
          "type": "integer",
          "format": "int32"
        },
        "queues": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.ResourcePolicyRule": {
      "type": "object",
      "required": [
        "verbs",
        "apiGroups",
        "resources"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "clusterScope": {
          "type": "boolean"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.ServiceAccountSubject": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.flowcontrol.v1beta1.Subject": {
      "type": "object",
      "required": [
        "kind"
      ],
      "properties": {
        "group": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.GroupSubject"
        },
        "kind": {
          "type": "string"
        },
        "serviceAccount": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.ServiceAccountSubject"
        },
        "user": {
          "$ref": "#/definitions/io.k8s.api.flowcontrol.v1beta1.UserSubject"
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "kind",
          "fields-to-discriminateBy": {
            "group": "Group",
            "serviceAccount": "ServiceAccount",
            "user": "User"
          }
        }
      ]
    },
    "io.k8s.api.flowcontrol.v1beta1.UserSubject": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.networking.v1.HTTPIngressPath": {
      "type": "object",
      "required": [
        "backend"
      ],
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.networking.v1.HTTPIngressRuleValue": {
      "type": "object",
      "required": [
        "paths"
      ],
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressPath"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.networking.v1.IPBlock": {
      "type": "object",
      "required": [
        "cidr"
      ],
      "properties": {
        "cidr": {
          "type": "string"
        },
        "except": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.networking.v1.Ingress": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "Ingress",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressBackend": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressServiceBackend"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressClass": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClassSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressClassSpec": {
      "type": "object",
      "properties": {
        "controller": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.Ingress"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.HTTPIngressRuleValue"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressServiceBackend": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.ServiceBackendPort"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressSpec": {
      "type": "object",
      "properties": {
        "defaultBackend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressRule"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.IngressTLS"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"
        }
      }
    },
    "io.k8s.api.networking.v1.IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.networking.v1.NetworkPolicy": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicySpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "NetworkPolicy",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          }
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          }
        }
      }
    },
    "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
      "type": "object",
      "properties": {
        "from": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
          }
        }
      }
    },
    "io.k8s.api.networking.v1.NetworkPolicyList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicy"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "NetworkPolicyList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.networking.v1.NetworkPolicyPeer": {
      "type": "object",
      "properties": {
        "ipBlock": {
          "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.api.networking.v1.NetworkPolicyPort": {
      "type": "object",
      "properties": {
        "port": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.networking.v1.NetworkPolicySpec": {
      "type": "object",
      "required": [
        "podSelector"
      ],
      "properties": {
        "egress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
          }
        },
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
          }
        },
        "podSelector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "policyTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.networking.v1.ServiceBackendPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.HTTPIngressPath": {
      "type": "object",
      "required": [
        "backend"
      ],
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.HTTPIngressRuleValue": {
      "type": "object",
      "required": [
        "paths"
      ],
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1beta1.HTTPIngressPath"
          }
        }
      }
    },
    "io.k8s.api.networking.v1beta1.Ingress": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "Ingress",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.networking.v1beta1.IngressBackend": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "serviceName": {
          "type": "string"
        },
        "servicePort": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.IngressClass": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressClassSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClass",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.networking.v1beta1.IngressClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressClassList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.networking.v1beta1.IngressClassSpec": {
      "type": "object",
      "properties": {
        "controller": {
          "type": "string"
        },
        "parameters": {
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.IngressList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1beta1.Ingress"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "networking.k8s.io",
          "kind": "IngressList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.networking.v1beta1.IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.HTTPIngressRuleValue"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.IngressSpec": {
      "type": "object",
      "properties": {
        "backend": {
          "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressRule"
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.networking.v1beta1.IngressTLS"
          }
        }
      }
    },
    "io.k8s.api.networking.v1beta1.IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/io.k8s.api.core.v1.LoadBalancerStatus"
        }
      }
    },
    "io.k8s.api.networking.v1beta1.IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.node.v1.Overhead": {
      "type": "object",
      "properties": {
        "podFixed": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.node.v1.RuntimeClass": {
      "type": "object",
      "required": [
        "handler"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "overhead": {
          "$ref": "#/definitions/io.k8s.api.node.v1.Overhead"
        },
        "scheduling": {
          "$ref": "#/definitions/io.k8s.api.node.v1.Scheduling"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.node.v1.RuntimeClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.node.v1.RuntimeClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.node.v1.Scheduling": {
      "type": "object",
      "properties": {
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.node.v1beta1.Overhead": {
      "type": "object",
      "properties": {
        "podFixed": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.node.v1beta1.RuntimeClass": {
      "type": "object",
      "required": [
        "handler"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "overhead": {
          "$ref": "#/definitions/io.k8s.api.node.v1beta1.Overhead"
        },
        "scheduling": {
          "$ref": "#/definitions/io.k8s.api.node.v1beta1.Scheduling"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClass",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.node.v1beta1.RuntimeClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.node.v1beta1.RuntimeClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "node.k8s.io",
          "kind": "RuntimeClassList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.node.v1beta1.Scheduling": {
      "type": "object",
      "properties": {
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.AllowedCSIDriver": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.AllowedFlexVolume": {
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.AllowedHostPath": {
      "type": "object",
      "properties": {
        "pathPrefix": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.Eviction": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "deleteOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "Eviction",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.policy.v1beta1.FSGroupStrategyOptions": {
      "type": "object",
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
          }
        },
        "rule": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.HostPortRange": {
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "properties": {
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.IDRange": {
      "type": "object",
      "required": [
        "min",
        "max"
      ],
      "properties": {
        "max": {
          "type": "integer",
          "format": "int64"
        },
        "min": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.PodDisruptionBudget": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudget",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.policy.v1beta1.PodDisruptionBudgetList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudget"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodDisruptionBudgetList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec": {
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "minAvailable": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selector": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.PodDisruptionBudgetStatus": {
      "type": "object",
      "required": [
        "disruptionsAllowed",
        "currentHealthy",
        "desiredHealthy",
        "expectedPods"
      ],
      "properties": {
        "currentHealthy": {
          "type": "integer",
          "format": "int32"
        },
        "desiredHealthy": {
          "type": "integer",
          "format": "int32"
        },
        "disruptedPods": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
          }
        },
        "disruptionsAllowed": {
          "type": "integer",
          "format": "int32"
        },
        "expectedPods": {
          "type": "integer",
          "format": "int32"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.PodSecurityPolicy": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicySpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodSecurityPolicy",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.policy.v1beta1.PodSecurityPolicyList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodSecurityPolicy"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "policy",
          "kind": "PodSecurityPolicyList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.policy.v1beta1.PodSecurityPolicySpec": {
      "type": "object",
      "required": [
        "seLinux",
        "runAsUser",
        "supplementalGroups",
        "fsGroup"
      ],
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "allowedCSIDrivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.AllowedCSIDriver"
          }
        },
        "allowedCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedFlexVolumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.AllowedFlexVolume"
          }
        },
        "allowedHostPaths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.AllowedHostPath"
          }
        },
        "allowedProcMountTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedUnsafeSysctls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAddCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultAllowPrivilegeEscalation": {
          "type": "boolean"
        },
        "forbiddenSysctls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fsGroup": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.FSGroupStrategyOptions"
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostPorts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.HostPortRange"
          }
        },
        "privileged": {
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "requiredDropCapabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "runAsGroup": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions"
        },
        "runAsUser": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions"
        },
        "runtimeClass": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.RuntimeClassStrategyOptions"
        },
        "seLinux": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.SELinuxStrategyOptions"
        },
        "supplementalGroups": {
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions"
        },
        "volumes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.policy.v1beta1.RunAsGroupStrategyOptions": {
      "type": "object",
      "required": [
        "rule"
      ],
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
          }
        },
        "rule": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.RunAsUserStrategyOptions": {
      "type": "object",
      "required": [
        "rule"
      ],
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
          }
        },
        "rule": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.RuntimeClassStrategyOptions": {
      "type": "object",
      "required": [
        "allowedRuntimeClassNames"
      ],
      "properties": {
        "allowedRuntimeClassNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultRuntimeClassName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.SELinuxStrategyOptions": {
      "type": "object",
      "required": [
        "rule"
      ],
      "properties": {
        "rule": {
          "type": "string"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.SupplementalGroupsStrategyOptions": {
      "type": "object",
      "properties": {
        "ranges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.policy.v1beta1.IDRange"
          }
        },
        "rule": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.rbac.v1.AggregationRule": {
      "type": "object",
      "properties": {
        "clusterRoleSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          }
        }
      }
    },
    "io.k8s.api.rbac.v1.ClusterRole": {
      "type": "object",
      "properties": {
        "aggregationRule": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.AggregationRule"
        },
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleBinding": {
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBindingList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.ClusterRoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.ClusterRole"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.PolicyRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.rbac.v1.Role": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "Role",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleBinding": {
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleRef"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBinding",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.RoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBindingList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1.Role"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.rbac.v1.RoleRef": {
      "type": "object",
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.rbac.v1.Subject": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.rbac.v1beta1.AggregationRule": {
      "type": "object",
      "properties": {
        "clusterRoleSelectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
          }
        }
      }
    },
    "io.k8s.api.rbac.v1beta1.ClusterRole": {
      "type": "object",
      "properties": {
        "aggregationRule": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.AggregationRule"
        },
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRole",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.ClusterRoleBinding": {
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleRef"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBinding",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.ClusterRoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.ClusterRoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleBindingList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.ClusterRoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.ClusterRole"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "ClusterRoleList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.PolicyRule": {
      "type": "object",
      "required": [
        "verbs"
      ],
      "properties": {
        "apiGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceURLs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.rbac.v1beta1.Role": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.PolicyRule"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "Role",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.RoleBinding": {
      "type": "object",
      "required": [
        "roleRef"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "roleRef": {
          "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleRef"
        },
        "subjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Subject"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBinding",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.RoleBindingList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.RoleBinding"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleBindingList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.RoleList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.rbac.v1beta1.Role"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "RoleList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.rbac.v1beta1.RoleRef": {
      "type": "object",
      "required": [
        "apiGroup",
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.rbac.v1beta1.Subject": {
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.scheduling.v1.PriorityClass": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "globalDefault": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.scheduling.v1.PriorityClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.scheduling.v1.PriorityClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.scheduling.v1beta1.PriorityClass": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "globalDefault": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClass",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.scheduling.v1beta1.PriorityClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.scheduling.v1beta1.PriorityClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "scheduling.k8s.io",
          "kind": "PriorityClassList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriver": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriverSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriver",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriverList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSIDriver"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriverList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSIDriverSpec": {
      "type": "object",
      "properties": {
        "attachRequired": {
          "type": "boolean"
        },
        "fsGroupPolicy": {
          "type": "string"
        },
        "podInfoOnMount": {
          "type": "boolean"
        },
        "requiresRepublish": {
          "type": "boolean"
        },
        "storageCapacity": {
          "type": "boolean"
        },
        "tokenRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.TokenRequest"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "volumeLifecycleModes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        }
      }
    },
    "io.k8s.api.storage.v1.CSINode": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINode",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSINodeDriver": {
      "type": "object",
      "required": [
        "name",
        "nodeID"
      ],
      "properties": {
        "allocatable": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeNodeResources"
        },
        "name": {
          "type": "string"
        },
        "nodeID": {
          "type": "string"
        },
        "topologyKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.storage.v1.CSINodeList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSINode"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINodeList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.CSINodeSpec": {
      "type": "object",
      "required": [
        "drivers"
      ],
      "properties": {
        "drivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.CSINodeDriver"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.k8s.api.storage.v1.StorageClass": {
      "type": "object",
      "required": [
        "provisioner"
      ],
      "properties": {
        "allowVolumeExpansion": {
          "type": "boolean"
        },
        "allowedTopologies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
          }
        },
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioner": {
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "volumeBindingMode": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.StorageClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.StorageClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.TokenRequest": {
      "type": "object",
      "required": [
        "audience"
      ],
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.storage.v1.VolumeAttachment": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachment",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.VolumeAttachmentList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachment"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachmentList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.storage.v1.VolumeAttachmentSource": {
      "type": "object",
      "properties": {
        "inlineVolumeSpec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
        },
        "persistentVolumeName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.storage.v1.VolumeAttachmentSpec": {
      "type": "object",
      "required": [
        "attacher",
        "source",
        "nodeName"
      ],
      "properties": {
        "attacher": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeAttachmentSource"
        }
      }
    },
    "io.k8s.api.storage.v1.VolumeAttachmentStatus": {
      "type": "object",
      "required": [
        "attached"
      ],
      "properties": {
        "attachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError"
        },
        "attached": {
          "type": "boolean"
        },
        "attachmentMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "detachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1.VolumeError"
        }
      }
    },
    "io.k8s.api.storage.v1.VolumeError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.storage.v1.VolumeNodeResources": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.CSIDriver": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.CSIDriverSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriver",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.CSIDriverList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.CSIDriver"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSIDriverList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.CSIDriverSpec": {
      "type": "object",
      "properties": {
        "attachRequired": {
          "type": "boolean"
        },
        "fsGroupPolicy": {
          "type": "string"
        },
        "podInfoOnMount": {
          "type": "boolean"
        },
        "requiresRepublish": {
          "type": "boolean"
        },
        "storageCapacity": {
          "type": "boolean"
        },
        "tokenRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.TokenRequest"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "volumeLifecycleModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.storage.v1beta1.CSINode": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.CSINodeSpec"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINode",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.CSINodeDriver": {
      "type": "object",
      "required": [
        "name",
        "nodeID"
      ],
      "properties": {
        "allocatable": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeNodeResources"
        },
        "name": {
          "type": "string"
        },
        "nodeID": {
          "type": "string"
        },
        "topologyKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.storage.v1beta1.CSINodeList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.CSINode"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "CSINodeList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.CSINodeSpec": {
      "type": "object",
      "required": [
        "drivers"
      ],
      "properties": {
        "drivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.CSINodeDriver"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.StorageClass": {
      "type": "object",
      "required": [
        "provisioner"
      ],
      "properties": {
        "allowVolumeExpansion": {
          "type": "boolean"
        },
        "allowedTopologies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.TopologySelectorTerm"
          }
        },
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "mountOptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "provisioner": {
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "volumeBindingMode": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClass",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.StorageClassList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.StorageClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "StorageClassList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.TokenRequest": {
      "type": "object",
      "required": [
        "audience"
      ],
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.VolumeAttachment": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeAttachmentSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeAttachmentStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachment",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.VolumeAttachmentList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeAttachment"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "storage.k8s.io",
          "kind": "VolumeAttachmentList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.api.storage.v1beta1.VolumeAttachmentSource": {
      "type": "object",
      "properties": {
        "inlineVolumeSpec": {
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeSpec"
        },
        "persistentVolumeName": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.VolumeAttachmentSpec": {
      "type": "object",
      "required": [
        "attacher",
        "source",
        "nodeName"
      ],
      "properties": {
        "attacher": {
          "type": "string"
        },
        "nodeName": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeAttachmentSource"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.VolumeAttachmentStatus": {
      "type": "object",
      "required": [
        "attached"
      ],
      "properties": {
        "attachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeError"
        },
        "attached": {
          "type": "boolean"
        },
        "attachmentMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "detachError": {
          "$ref": "#/definitions/io.k8s.api.storage.v1beta1.VolumeError"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.VolumeError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.api.storage.v1beta1.VolumeNodeResources": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition": {
      "type": "object",
      "required": [
        "name",
        "type",
        "jsonPath"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "jsonPath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion": {
      "type": "object",
      "required": [
        "strategy"
      ],
      "properties": {
        "strategy": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinition",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinition"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinitionList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames": {
      "type": "object",
      "required": [
        "plural",
        "kind"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "listKind": {
          "type": "string"
        },
        "plural": {
          "type": "string"
        },
        "shortNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singular": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionSpec": {
      "type": "object",
      "required": [
        "group",
        "names",
        "scope",
        "versions"
      ],
      "properties": {
        "conversion": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceConversion"
        },
        "group": {
          "type": "string"
        },
        "names": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
        },
        "preserveUnknownFields": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion"
          }
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionStatus": {
      "type": "object",
      "properties": {
        "acceptedNames": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionNames"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionCondition"
          }
        },
        "storedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceDefinitionVersion": {
      "type": "object",
      "required": [
        "name",
        "served",
        "storage"
      ],
      "properties": {
        "additionalPrinterColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceColumnDefinition"
          }
        },
        "deprecated": {
          "type": "boolean"
        },
        "deprecationWarning": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation"
        },
        "served": {
          "type": "boolean"
        },
        "storage": {
          "type": "boolean"
        },
        "subresources": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale": {
      "type": "object",
      "required": [
        "specReplicasPath",
        "statusReplicasPath"
      ],
      "properties": {
        "labelSelectorPath": {
          "type": "string"
        },
        "specReplicasPath": {
          "type": "string"
        },
        "statusReplicasPath": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus": {
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresources": {
      "type": "object",
      "properties": {
        "scale": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceScale"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceSubresourceStatus"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.CustomResourceValidation": {
      "type": "object",
      "properties": {
        "openAPIV3Schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "$schema": {
          "type": "string"
        },
        "additionalItems": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "additionalProperties": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool"
        },
        "allOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "default": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray"
          }
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
          }
        },
        "example": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSON"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "externalDocs": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ExternalDocumentation"
        },
        "format": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray"
        },
        "maxItems": {
          "type": "integer",
          "format": "int64"
        },
        "maxLength": {
          "type": "integer",
          "format": "int64"
        },
        "maxProperties": {
          "type": "integer",
          "format": "int64"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        },
        "minItems": {
          "type": "integer",
          "format": "int64"
        },
        "minLength": {
          "type": "integer",
          "format": "int64"
        },
        "minProperties": {
          "type": "integer",
          "format": "int64"
        },
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "multipleOf": {
          "type": "number",
          "format": "double"
        },
        "not": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
        },
        "nullable": {
          "type": "boolean"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "pattern": {
          "type": "string"
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaProps"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "x-kubernetes-embedded-resource": {
          "type": "boolean"
        },
        "x-kubernetes-int-or-string": {
          "type": "boolean"
        },
        "x-kubernetes-list-map-keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "x-kubernetes-list-type": {
          "type": "string"
        },
        "x-kubernetes-map-type": {
          "type": "string"
        },
        "x-kubernetes-preserve-unknown-fields": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrBool": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.JSONSchemaPropsOrStringArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig": {
      "type": "object",
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookConversion": {
      "type": "object",
      "required": [
        "conversionReviewVersions"
      ],
      "properties": {
        "clientConfig": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1.WebhookClientConfig"
        },
        "conversionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition": {
      "type": "object",
      "required": [
        "name",
        "type",
        "JSONPath"
      ],
      "properties": {
        "JSONPath": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion": {
      "type": "object",
      "required": [
        "strategy"
      ],
      "properties": {
        "conversionReviewVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "strategy": {
          "type": "string"
        },
        "webhookClientConfig": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.WebhookClientConfig"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinition",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinition"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiextensions.k8s.io",
          "kind": "CustomResourceDefinitionList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames": {
      "type": "object",
      "required": [
        "plural",
        "kind"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string"
        },
        "listKind": {
          "type": "string"
        },
        "plural": {
          "type": "string"
        },
        "shortNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singular": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionSpec": {
      "type": "object",
      "required": [
        "group",
        "names",
        "scope"
      ],
      "properties": {
        "additionalPrinterColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition"
          }
        },
        "conversion": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceConversion"
        },
        "group": {
          "type": "string"
        },
        "names": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames"
        },
        "preserveUnknownFields": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "subresources": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources"
        },
        "validation": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation"
        },
        "version": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion"
          }
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionStatus": {
      "type": "object",
      "properties": {
        "acceptedNames": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionNames"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionCondition"
          }
        },
        "storedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitionVersion": {
      "type": "object",
      "required": [
        "name",
        "served",
        "storage"
      ],
      "properties": {
        "additionalPrinterColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceColumnDefinition"
          }
        },
        "deprecated": {
          "type": "boolean"
        },
        "deprecationWarning": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation"
        },
        "served": {
          "type": "boolean"
        },
        "storage": {
          "type": "boolean"
        },
        "subresources": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale": {
      "type": "object",
      "required": [
        "specReplicasPath",
        "statusReplicasPath"
      ],
      "properties": {
        "labelSelectorPath": {
          "type": "string"
        },
        "specReplicasPath": {
          "type": "string"
        },
        "statusReplicasPath": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceStatus": {
      "type": "object"
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresources": {
      "type": "object",
      "properties": {
        "scale": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceScale"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceSubresourceStatus"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceValidation": {
      "type": "object",
      "properties": {
        "openAPIV3Schema": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "$schema": {
          "type": "string"
        },
        "additionalItems": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool"
        },
        "additionalProperties": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool"
        },
        "allOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "default": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray"
          }
        },
        "description": {
          "type": "string"
        },
        "enum": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
          }
        },
        "example": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSON"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "externalDocs": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ExternalDocumentation"
        },
        "format": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray"
        },
        "maxItems": {
          "type": "integer",
          "format": "int64"
        },
        "maxLength": {
          "type": "integer",
          "format": "int64"
        },
        "maxProperties": {
          "type": "integer",
          "format": "int64"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        },
        "minItems": {
          "type": "integer",
          "format": "int64"
        },
        "minLength": {
          "type": "integer",
          "format": "int64"
        },
        "minProperties": {
          "type": "integer",
          "format": "int64"
        },
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "multipleOf": {
          "type": "number",
          "format": "double"
        },
        "not": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
        },
        "nullable": {
          "type": "boolean"
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "pattern": {
          "type": "string"
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaProps"
          }
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "x-kubernetes-embedded-resource": {
          "type": "boolean"
        },
        "x-kubernetes-int-or-string": {
          "type": "boolean"
        },
        "x-kubernetes-list-map-keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "x-kubernetes-list-type": {
          "type": "string"
        },
        "x-kubernetes-map-type": {
          "type": "string"
        },
        "x-kubernetes-preserve-unknown-fields": {
          "type": "boolean"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrBool": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.JSONSchemaPropsOrStringArray": {},
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ServiceReference": {
      "type": "object",
      "required": [
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.WebhookClientConfig": {
      "type": "object",
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.apiextensions-apiserver.pkg.apis.apiextensions.v1beta1.ServiceReference"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup": {
      "type": "object",
      "required": [
        "name",
        "versions"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "preferredVersion": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
        },
        "serverAddressByClientCIDRs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          }
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroup",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIGroupList": {
      "type": "object",
      "required": [
        "groups"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIGroup"
          }
        },
        "kind": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIGroupList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResource": {
      "type": "object",
      "required": [
        "name",
        "singularName",
        "namespaced",
        "kind",
        "verbs"
      ],
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespaced": {
          "type": "boolean"
        },
        "shortNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "singularName": {
          "type": "string"
        },
        "storageVersionHash": {
          "type": "string"
        },
        "verbs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIResourceList": {
      "type": "object",
      "required": [
        "groupVersion",
        "resources"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "groupVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.APIResource"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIResourceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.APIVersions": {
      "type": "object",
      "required": [
        "versions",
        "serverAddressByClientCIDRs"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "serverAddressByClientCIDRs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR"
          }
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "APIVersions",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Condition": {
      "type": "object",
      "required": [
        "type",
        "status",
        "lastTransitionTime",
        "reason",
        "message"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "dryRun": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "type": "string"
        },
        "orphanDependents": {
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "propagationPolicy": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "DeleteOptions",
          "version": "v1beta2"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "DeleteOptions",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "batch",
          "kind": "DeleteOptions",
          "version": "v2alpha1"
        },
        {
          "group": "build.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "image.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "imagepolicy.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "oauth.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "project.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "quota.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "route.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "security.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "DeleteOptions",
          "version": "v1beta1"
        },
        {
          "group": "template.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        },
        {
          "group": "user.openshift.io",
          "kind": "DeleteOptions",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions_v2": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "dryRun": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "kind": {
          "type": "string"
        },
        "orphanDependents": {
          "type": "boolean"
        },
        "preconditions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions"
        },
        "propagationPolicy": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Duration": {
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionForDiscovery": {
      "type": "object",
      "required": [
        "groupVersion",
        "version"
      ],
      "properties": {
        "groupVersion": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionKind": {
      "type": "object",
      "required": [
        "group",
        "version",
        "kind"
      ],
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "type": "string",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "type": "object",
      "properties": {
        "continue": {
          "type": "string"
        },
        "remainingItemCount": {
          "type": "integer",
          "format": "int64"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime": {
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "type": "string"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "type": "string"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference_v2": {
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Patch": {
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions": {
      "type": "object",
      "properties": {
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ServerAddressByClientCIDR": {
      "type": "object",
      "required": [
        "clientCIDR",
        "serverAddress"
      ],
      "properties": {
        "clientCIDR": {
          "type": "string"
        },
        "serverAddress": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails"
        },
        "kind": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Status",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails": {
      "type": "object",
      "properties": {
        "causes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          }
        },
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "retryAfterSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2": {
      "type": "object",
      "properties": {
        "causes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause"
          }
        },
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "retryAfterSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Status_v2": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.StatusDetails_v2"
        },
        "kind": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.WatchEvent": {
      "type": "object",
      "required": [
        "type",
        "object"
      ],
      "properties": {
        "object": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.runtime.RawExtension"
        },
        "type": {
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admission.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "admissionregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apiextensions.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apiregistration.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "apps",
          "kind": "WatchEvent",
          "version": "v1beta2"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authentication.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "authorization.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta1"
        },
        {
          "group": "autoscaling",
          "kind": "WatchEvent",
          "version": "v2beta2"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "batch",
          "kind": "WatchEvent",
          "version": "v2alpha1"
        },
        {
          "group": "build.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "certificates.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "coordination.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "discovery.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "events.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "extensions",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "flowcontrol.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "image.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "imagepolicy.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "internal.apiserver.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "networking.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "node.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "oauth.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "policy",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "project.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "quota.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "rbac.authorization.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "route.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "scheduling.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "security.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1alpha1"
        },
        {
          "group": "storage.k8s.io",
          "kind": "WatchEvent",
          "version": "v1beta1"
        },
        {
          "group": "template.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        },
        {
          "group": "user.openshift.io",
          "kind": "WatchEvent",
          "version": "v1"
        }
      ]
    },
    "io.k8s.apimachinery.pkg.runtime.RawExtension": {
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "type": "string",
      "format": "int-or-string"
    },
    "io.k8s.apimachinery.pkg.version.Info": {
      "type": "object",
      "required": [
        "major",
        "minor",
        "gitVersion",
        "gitCommit",
        "gitTreeState",
        "buildDate",
        "goVersion",
        "compiler",
        "platform"
      ],
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitTreeState": {
          "type": "string"
        },
        "gitVersion": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "major": {
          "type": "string"
        },
        "minor": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIService",
          "version": "v1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIService"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIServiceList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceSpec": {
      "type": "object",
      "required": [
        "groupPriorityMinimum",
        "versionPriority"
      ],
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "group": {
          "type": "string"
        },
        "groupPriorityMinimum": {
          "type": "integer",
          "format": "int32"
        },
        "insecureSkipTLSVerify": {
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference"
        },
        "version": {
          "type": "string"
        },
        "versionPriority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.APIServiceCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1.ServiceReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIService": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec"
        },
        "status": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIService",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceCondition": {
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastTransitionTime": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIService"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "apiregistration.k8s.io",
          "kind": "APIServiceList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceSpec": {
      "type": "object",
      "required": [
        "groupPriorityMinimum",
        "versionPriority"
      ],
      "properties": {
        "caBundle": {
          "type": "string",
          "format": "byte",
          "x-kubernetes-list-type": "atomic"
        },
        "group": {
          "type": "string"
        },
        "groupPriorityMinimum": {
          "type": "integer",
          "format": "int32"
        },
        "insecureSkipTLSVerify": {
          "type": "boolean"
        },
        "service": {
          "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference"
        },
        "version": {
          "type": "string"
        },
        "versionPriority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.APIServiceCondition"
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.k8s.kube-aggregator.pkg.apis.apiregistration.v1beta1.ServiceReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "io.k8s.metrics.pkg.apis.metrics.v1beta1.ContainerMetrics": {
      "type": "object",
      "required": [
        "name",
        "usage"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "usage": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.metrics.pkg.apis.metrics.v1beta1.NodeMetrics": {
      "type": "object",
      "required": [
        "timestamp",
        "window",
        "usage"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "timestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "usage": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "window": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        }
      }
    },
    "io.k8s.metrics.pkg.apis.metrics.v1beta1.NodeMetricsList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.metrics.pkg.apis.metrics.v1beta1.NodeMetrics"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetrics": {
      "type": "object",
      "required": [
        "timestamp",
        "window",
        "containers"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.metrics.pkg.apis.metrics.v1beta1.ContainerMetrics"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "timestamp": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "window": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        }
      }
    },
    "io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetricsList": {
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.metrics.pkg.apis.metrics.v1beta1.PodMetrics"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.k8s.migration.v1alpha1.StorageState": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "properties": {
            "resource": {
              "description": "The resource this storageState is about.",
              "type": "object",
              "properties": {
                "group": {
                  "description": "The name of the group.",
                  "type": "string"
                },
                "resource": {
                  "description": "The name of the resource.",
                  "type": "string"
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "currentStorageVersionHash": {
              "description": "The hash value of the current storage version, as shown in the discovery document served by the API server. Storage Version is the version to which objects are converted to before persisted.",
              "type": "string"
            },
            "lastHeartbeatTime": {
              "description": "LastHeartbeatTime is the last time the storage migration triggering controller checks the storage version hash of this resource in the discovery document and updates this field.",
              "type": "string",
              "format": "date-time"
            },
            "persistedStorageVersionHashes": {
              "description": "The hash values of storage versions that persisted instances of spec.resource might still be encoded in. \"Unknown\" is a valid value in the list, and is the default value. It is not safe to upgrade or downgrade to an apiserver binary that does not support all versions listed in this field, or if \"Unknown\" is listed. Once the storage version migration for this resource has completed, the value of this field is refined to only contain the currentStorageVersionHash. Once the apiserver has changed the storage version, the new storage version is appended to the list.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "migration.k8s.io",
          "kind": "StorageState",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.migration.v1alpha1.StorageStateList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.migration.v1alpha1.StorageState"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "migration.k8s.io",
          "kind": "StorageStateList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.migration.v1alpha1.StorageVersionMigration": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "required": [
            "resource"
          ],
          "properties": {
            "continueToken": {
              "description": "The token used in the list options to get the next chunk of objects to migrate. When the .status.conditions indicates the migration is \"Running\", users can use this token to check the progress of the migration.",
              "type": "string"
            },
            "resource": {
              "description": "The resource that is being migrated. The migrator sends requests to the endpoint serving the resource. Immutable.",
              "type": "object",
              "properties": {
                "group": {
                  "description": "The name of the group.",
                  "type": "string"
                },
                "resource": {
                  "description": "The name of the resource.",
                  "type": "string"
                },
                "version": {
                  "description": "The name of the version.",
                  "type": "string"
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "conditions": {
              "description": "The latest available observations of the migration's current state.",
              "type": "array",
              "items": {
                "description": "Describes the state of a migration at a certain point.",
                "type": "object",
                "required": [
                  "status",
                  "type"
                ],
                "properties": {
                  "lastUpdateTime": {
                    "description": "The last time this condition was updated.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "A human readable message indicating details about the transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "The reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status of the condition, one of True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of the condition.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "migration.k8s.io",
          "kind": "StorageVersionMigration",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.migration.v1alpha1.StorageVersionMigrationList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.migration.v1alpha1.StorageVersionMigration"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "migration.k8s.io",
          "kind": "StorageVersionMigrationList",
          "version": "v1alpha1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshot": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "required": [
            "source"
          ],
          "properties": {
            "source": {
              "description": "source specifies where a snapshot will be created from. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "persistentVolumeClaimName": {
                  "description": "persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.",
                  "type": "string"
                },
                "volumeSnapshotContentName": {
                  "description": "volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.",
                  "type": "string"
                }
              }
            },
            "volumeSnapshotClassName": {
              "description": "VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.",
              "type": "string"
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "boundVolumeSnapshotContentName": {
              "description": "boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
              "type": "string"
            },
            "creationTime": {
              "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.",
              "type": "string",
              "format": "date-time"
            },
            "error": {
              "description": "error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                  "type": "string"
                },
                "time": {
                  "description": "time is the timestamp when the error was encountered.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "readyToUse": {
              "description": "readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
              "type": "boolean"
            },
            "restoreSize": {
              "description": "restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
              "type": "string",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshotClass": {
      "type": "object",
      "required": [
        "deletionPolicy",
        "driver"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "deletionPolicy": {
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ]
        },
        "driver": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshotClassList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1.VolumeSnapshotClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClassList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshotContent": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "required": [
            "deletionPolicy",
            "driver",
            "source",
            "volumeSnapshotRef"
          ],
          "properties": {
            "deletionPolicy": {
              "description": "deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.",
              "type": "string",
              "enum": [
                "Delete",
                "Retain"
              ]
            },
            "driver": {
              "description": "driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.",
              "type": "string"
            },
            "source": {
              "description": "source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "snapshotHandle": {
                  "description": "snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.",
                  "type": "string"
                },
                "volumeHandle": {
                  "description": "volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.",
                  "type": "string"
                }
              }
            },
            "volumeSnapshotClassName": {
              "description": "name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.",
              "type": "string"
            },
            "volumeSnapshotRef": {
              "description": "volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "creationTime": {
              "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.",
              "type": "integer",
              "format": "int64"
            },
            "error": {
              "description": "error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                  "type": "string"
                },
                "time": {
                  "description": "time is the timestamp when the error was encountered.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "readyToUse": {
              "description": "readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
              "type": "boolean"
            },
            "restoreSize": {
              "description": "restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "snapshotHandle": {
              "description": "snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshotContentList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1.VolumeSnapshotContent"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContentList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1.VolumeSnapshotList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1.VolumeSnapshot"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotList",
          "version": "v1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshot": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "required": [
            "source"
          ],
          "properties": {
            "source": {
              "description": "source specifies where a snapshot will be created from. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "persistentVolumeClaimName": {
                  "description": "persistentVolumeClaimName specifies the name of the PersistentVolumeClaim object representing the volume from which a snapshot should be created. This PVC is assumed to be in the same namespace as the VolumeSnapshot object. This field should be set if the snapshot does not exists, and needs to be created. This field is immutable.",
                  "type": "string"
                },
                "volumeSnapshotContentName": {
                  "description": "volumeSnapshotContentName specifies the name of a pre-existing VolumeSnapshotContent object representing an existing volume snapshot. This field should be set if the snapshot already exists and only needs a representation in Kubernetes. This field is immutable.",
                  "type": "string"
                }
              }
            },
            "volumeSnapshotClassName": {
              "description": "VolumeSnapshotClassName is the name of the VolumeSnapshotClass requested by the VolumeSnapshot. VolumeSnapshotClassName may be left nil to indicate that the default SnapshotClass should be used. A given cluster may have multiple default Volume SnapshotClasses: one default per CSI Driver. If a VolumeSnapshot does not specify a SnapshotClass, VolumeSnapshotSource will be checked to figure out what the associated CSI Driver is, and the default VolumeSnapshotClass associated with that CSI Driver will be used. If more than one VolumeSnapshotClass exist for a given CSI Driver and more than one have been marked as default, CreateSnapshot will fail and generate an event. Empty string is not allowed for this field.",
              "type": "string"
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "boundVolumeSnapshotContentName": {
              "description": "boundVolumeSnapshotContentName is the name of the VolumeSnapshotContent object to which this VolumeSnapshot object intends to bind to. If not specified, it indicates that the VolumeSnapshot object has not been successfully bound to a VolumeSnapshotContent object yet. NOTE: To avoid possible security issues, consumers must verify binding between VolumeSnapshot and VolumeSnapshotContent objects is successful (by validating that both VolumeSnapshot and VolumeSnapshotContent point at each other) before using this object.",
              "type": "string"
            },
            "creationTime": {
              "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it may indicate that the creation time of the snapshot is unknown.",
              "type": "string",
              "format": "date-time"
            },
            "error": {
              "description": "error is the last observed error during snapshot creation, if any. This field could be helpful to upper level controllers(i.e., application controller) to decide whether they should continue on waiting for the snapshot to be created based on the type of error reported. The snapshot controller will keep retrying when an error occurrs during the snapshot creation. Upon success, this error field will be cleared.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                  "type": "string"
                },
                "time": {
                  "description": "time is the timestamp when the error was encountered.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "readyToUse": {
              "description": "readyToUse indicates if the snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
              "type": "boolean"
            },
            "restoreSize": {
              "description": "restoreSize represents the minimum size of volume required to create a volume from this snapshot. In dynamic snapshot creation case, this field will be filled in by the snapshot controller with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
              "type": "string",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshotClass": {
      "type": "object",
      "required": [
        "deletionPolicy",
        "driver"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "deletionPolicy": {
          "type": "string",
          "enum": [
            "Delete",
            "Retain"
          ]
        },
        "driver": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshotClassList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1beta1.VolumeSnapshotClass"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClassList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshotContent": {
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta_v2"
        },
        "spec": {
          "type": "object",
          "required": [
            "deletionPolicy",
            "driver",
            "source",
            "volumeSnapshotRef"
          ],
          "properties": {
            "deletionPolicy": {
              "description": "deletionPolicy determines whether this VolumeSnapshotContent and its physical snapshot on the underlying storage system should be deleted when its bound VolumeSnapshot is deleted. Supported values are \"Retain\" and \"Delete\". \"Retain\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are kept. \"Delete\" means that the VolumeSnapshotContent and its physical snapshot on underlying storage system are deleted. For dynamically provisioned snapshots, this field will automatically be filled in by the CSI snapshotter sidecar with the \"DeletionPolicy\" field defined in the corresponding VolumeSnapshotClass. For pre-existing snapshots, users MUST specify this field when creating the  VolumeSnapshotContent object. Required.",
              "type": "string",
              "enum": [
                "Delete",
                "Retain"
              ]
            },
            "driver": {
              "description": "driver is the name of the CSI driver used to create the physical snapshot on the underlying storage system. This MUST be the same as the name returned by the CSI GetPluginName() call for that driver. Required.",
              "type": "string"
            },
            "source": {
              "description": "source specifies whether the snapshot is (or should be) dynamically provisioned or already exists, and just requires a Kubernetes object representation. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "snapshotHandle": {
                  "description": "snapshotHandle specifies the CSI \"snapshot_id\" of a pre-existing snapshot on the underlying storage system for which a Kubernetes object representation was (or should be) created. This field is immutable.",
                  "type": "string"
                },
                "volumeHandle": {
                  "description": "volumeHandle specifies the CSI \"volume_id\" of the volume from which a snapshot should be dynamically taken from. This field is immutable.",
                  "type": "string"
                }
              }
            },
            "volumeSnapshotClassName": {
              "description": "name of the VolumeSnapshotClass from which this snapshot was (or will be) created. Note that after provisioning, the VolumeSnapshotClass may be deleted or recreated with different set of values, and as such, should not be referenced post-snapshot creation.",
              "type": "string"
            },
            "volumeSnapshotRef": {
              "description": "volumeSnapshotRef specifies the VolumeSnapshot object to which this VolumeSnapshotContent object is bound. VolumeSnapshot.Spec.VolumeSnapshotContentName field must reference to this VolumeSnapshotContent's name for the bidirectional binding to be valid. For a pre-existing VolumeSnapshotContent object, name and namespace of the VolumeSnapshot object MUST be provided for binding to happen. This field is immutable after creation. Required.",
              "type": "object",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              }
            }
          }
        },
        "status": {
          "type": "object",
          "properties": {
            "creationTime": {
              "description": "creationTime is the timestamp when the point-in-time snapshot is taken by the underlying storage system. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"creation_time\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"creation_time\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. If not specified, it indicates the creation time is unknown. The format of this field is a Unix nanoseconds time encoded as an int64. On Unix, the command `date +%s%N` returns the current time in nanoseconds since 1970-01-01 00:00:00 UTC.",
              "type": "integer",
              "format": "int64"
            },
            "error": {
              "description": "error is the last observed error during snapshot creation, if any. Upon success after retry, this error field will be cleared.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "message is a string detailing the encountered error during snapshot creation if specified. NOTE: message may be logged, and it should not contain sensitive information.",
                  "type": "string"
                },
                "time": {
                  "description": "time is the timestamp when the error was encountered.",
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "readyToUse": {
              "description": "readyToUse indicates if a snapshot is ready to be used to restore a volume. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"ready_to_use\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"ready_to_use\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it, otherwise, this field will be set to \"True\". If not specified, it means the readiness of a snapshot is unknown.",
              "type": "boolean"
            },
            "restoreSize": {
              "description": "restoreSize represents the complete size of the snapshot in bytes. In dynamic snapshot creation case, this field will be filled in by the CSI snapshotter sidecar with the \"size_bytes\" value returned from CSI \"CreateSnapshot\" gRPC call. For a pre-existing snapshot, this field will be filled with the \"size_bytes\" value returned from the CSI \"ListSnapshots\" gRPC call if the driver supports it. When restoring a volume from this snapshot, the size of the volume MUST NOT be smaller than the restoreSize if it is specified, otherwise the restoration will fail. If not specified, it indicates that the size is unknown.",
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "snapshotHandle": {
              "description": "snapshotHandle is the CSI \"snapshot_id\" of a snapshot on the underlying storage system. If not specified, it indicates that dynamic snapshot creation has either failed or it is still in progress.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshotContentList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1beta1.VolumeSnapshotContent"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContentList",
          "version": "v1beta1"
        }
      ]
    },
    "io.k8s.storage.snapshot.v1beta1.VolumeSnapshotList": {
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.storage.snapshot.v1beta1.VolumeSnapshot"
          }
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotList",
          "version": "v1beta1"
        }
      ]
    }
  }
}
